{
	"info": {
		"_postman_id": "a4d13cba-0d71-43d8-a96f-cfb3ebc0486e",
		"name": "ReportGeneration",
		"description": "### Welcome to the API Documentation of the Attendance Report Generation System\n\n- Note : The Report Generation System is basically Read Only based . So there will be no put,delete request's . But we will be using the post request so that the messages could be transported in safe manner as the protcol of https will be followed in the production evironmet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34048243",
		"_collection_link": "https://www.postman.com/compliant-portal/workspace/reportgeneration-api/collection/34048243-a4d13cba-0d71-43d8-a96f-cfb3ebc0486e?action=share&source=collection_link&creator=34048243"
	},
	"item": [
		{
			"name": "StudentDetails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    ",
							"    responseData.forEach(function(student) {",
							"        pm.expect(student).to.be.an('object');",
							"        pm.expect(student).to.include.all.keys('_id', 'scholarNumber', 'StudentName', 'branch', 'section', 'batch');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Scholar number must be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function(student) {",
							"        pm.expect(student.scholarNumber).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Scholar number should not be empty\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Branch, section, and batch are non-empty strings\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('array');",
							"  responseData.forEach(function(student) {",
							"    pm.expect(student.branch).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Branch should not be empty\");",
							"    pm.expect(student.section).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Section should not be empty\");",
							"    pm.expect(student.batch).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Batch should not be empty\");",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"scholarNumber\":\"2211201179\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/student/details",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"student",
						"details"
					]
				}
			},
			"response": [
				{
					"name": "StudentDetails",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"scholarNumber\":\"2211201152\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/student/details",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"student",
								"details"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "156"
						},
						{
							"key": "ETag",
							"value": "W/\"9c-WRGxDnncCISD6/ROp9Ntk6dJWtA\""
						},
						{
							"key": "Date",
							"value": "Mon, 17 Feb 2025 10:46:58 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"_id\": \"678d3d92d5665f6a3eb3f957\",\n        \"scholarNumber\": \"2211201152\",\n        \"StudentName\": \"VELPUCHERLA YOGANANDA REDDY\",\n        \"branch\": \"CSE\",\n        \"section\": \"1\",\n        \"batch\": \"2022-26\"\n    }\n]"
				}
			]
		},
		{
			"name": "MonthlyReport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response content type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>Total Sessions</th>\r",
							"        <th>Present Count</th>\r",
							"        <th>Subject Name</th>\r",
							"        <th>Subject ID</th>\r",
							"        <th>Branch</th>\r",
							"        <th>Semester</th>\r",
							"        <th>Section</th>\r",
							"        <th>Scholar No</th>\r",
							"        <th>Month</th>\r",
							"        <th>Attendance Percentage</th>\r",
							"        <th>Subject Code</th>\r",
							"    </tr>\r",
							"    \r",
							"    {{#each response}}\r",
							"        <tr id=row_{{@key}}>\r",
							"            <td>{{totalSessions}}</td>\r",
							"            <td>{{presentCount}}</td>\r",
							"            <td>{{subjectName}}</td>\r",
							"            <td>{{subjectId}}</td>\r",
							"            <td>{{branch}}</td>\r",
							"            <td>{{semester}}</td>\r",
							"            <td>{{section}}</td>\r",
							"            <td>{{scholarNo}}</td>\r",
							"            <td>{{month}}</td>\r",
							"            <td>{{attendancePercentage}}</td>\r",
							"            <td>{{subjectCode}}</td>\r",
							"        </tr>\r",
							"    {{/each}}\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    return {response: pm.response.json()};\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"scholarNumber\":\"2211201137\"\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/student/attendance/monthly",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"student",
						"attendance",
						"monthly"
					]
				}
			},
			"response": [
				{
					"name": "Monthly",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"scholarNumber\":\"2211201109\",\r\n    \"branch\":\"CSE\",\r\n    \"semester\":\"VI\",\r\n    \"section\":\"01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/student/attendance/monthly",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"student",
								"attendance",
								"monthly"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "1534"
						},
						{
							"key": "ETag",
							"value": "W/\"5fe-mp+BkoZ+/hWPWrp/HefWY97wR1c\""
						},
						{
							"key": "Date",
							"value": "Mon, 17 Feb 2025 06:25:30 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"totalSessions\": 9,\n        \"presentCount\": 9,\n        \"subjectName\": \"Advanced Data Structures\",\n        \"subjectId\": \"678dfa8ad5665f6a3eb3fa67\",\n        \"branch\": \"CSE\",\n        \"semester\": \"VI\",\n        \"section\": \"01\",\n        \"scholarNo\": \"2211201109\",\n        \"month\": \"2025-01\",\n        \"attendancePercentage\": 100,\n        \"subjectCode\": \"CSE357\"\n    },\n    {\n        \"totalSessions\": 9,\n        \"presentCount\": 9,\n        \"subjectName\": \"Network & System Securities (T)\",\n        \"subjectId\": \"678ce483cd76735183ab8349\",\n        \"branch\": \"CSE\",\n        \"semester\": \"VI\",\n        \"section\": \"01\",\n        \"scholarNo\": \"2211201109\",\n        \"month\": \"2025-01\",\n        \"attendancePercentage\": 100,\n        \"subjectCode\": \"CSE323\"\n    },\n    {\n        \"totalSessions\": 5,\n        \"presentCount\": 3,\n        \"subjectName\": \"Network & System Securities (T)\",\n        \"subjectId\": \"678ce483cd76735183ab8349\",\n        \"branch\": \"CSE\",\n        \"semester\": \"VI\",\n        \"section\": \"01\",\n        \"scholarNo\": \"2211201109\",\n        \"month\": \"2025-02\",\n        \"attendancePercentage\": 60,\n        \"subjectCode\": \"CSE323\"\n    },\n    {\n        \"totalSessions\": 2,\n        \"presentCount\": 2,\n        \"subjectName\": \"Advanced Data Structures\",\n        \"subjectId\": \"678dfa8ad5665f6a3eb3fa67\",\n        \"branch\": \"CSE\",\n        \"semester\": \"VI\",\n        \"section\": \"01\",\n        \"scholarNo\": \"2211201109\",\n        \"month\": \"2025-02\",\n        \"attendancePercentage\": 100,\n        \"subjectCode\": \"CSE357\"\n    },\n    {\n        \"totalSessions\": 3,\n        \"presentCount\": 3,\n        \"subjectName\": \"Machine Learning\",\n        \"subjectId\": \"678ce483cd76735183ab8347\",\n        \"branch\": \"CSE\",\n        \"semester\": \"VI\",\n        \"section\": \"01\",\n        \"scholarNo\": \"2211201109\",\n        \"month\": \"2025-01\",\n        \"attendancePercentage\": 100,\n        \"subjectCode\": \"CSE321\"\n    },\n    {\n        \"totalSessions\": 4,\n        \"presentCount\": 4,\n        \"subjectName\": \"Machine Learning\",\n        \"subjectId\": \"678ce483cd76735183ab8347\",\n        \"branch\": \"CSE\",\n        \"semester\": \"VI\",\n        \"section\": \"01\",\n        \"scholarNo\": \"2211201109\",\n        \"month\": \"2025-02\",\n        \"attendancePercentage\": 100,\n        \"subjectCode\": \"CSE321\"\n    }\n]"
				}
			]
		},
		{
			"name": "FacultyDetails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.include.all.keys('_id', 'name', 'about', 'employeeCode', 'role', 'department', 'email', 'phone', 'abbreviation');",
							"});",
							"",
							"",
							"pm.test(\"EmployeeCode is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.data.employeeCode).to.be.a('string').and.to.have.lengthOf.at.least(1, \"EmployeeCode should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Email is in a valid format\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.email).to.match(/^.+@.+\\..+$/);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/faculty/details?employeeCode=110262198424",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"faculty",
						"details"
					],
					"query": [
						{
							"key": "employeeCode",
							"value": "110262198424"
						}
					]
				}
			},
			"response": [
				{
					"name": "FacultyDetails",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/faculty/details?employeeCode=0640",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"faculty",
								"details"
							],
							"query": [
								{
									"key": "employeeCode",
									"value": "0640"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "326"
						},
						{
							"key": "ETag",
							"value": "W/\"146-2P3ZSrJU95I4rTLxQ3NBPDE17nc\""
						},
						{
							"key": "Date",
							"value": "Mon, 17 Feb 2025 10:43:12 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"ok\",\n    \"message\": \"Success\",\n    \"data\": {\n        \"_id\": \"678ce4d0cd76735183ab8350\",\n        \"name\": \"Meenu Chawla\",\n        \"password\": \"$2b$12$/uO0dJ87WO5RtqhRI1otDej46.tm5R64mrb.HLGpSVlgmyufIRXZi\",\n        \"about\": \"Available\",\n        \"employeeCode\": \"0640\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"email\": \"meenuchawlamanit@gmail.com\",\n        \"phone\": \"7554051302\",\n        \"abbreviation\": \"MC\"\n    }\n}"
				}
			]
		},
		{
			"name": "FacultySubjectList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData.data).to.be.an('array').and.to.not.be.empty;",
							"",
							"    responseData.data.forEach(function(item) {",
							"        pm.expect(item).to.have.property('subject').that.is.an('object').and.to.not.be.empty;",
							"        pm.expect(item).to.have.property('branch').that.is.a('string').and.to.not.be.empty;",
							"        pm.expect(item).to.have.property('semester').that.is.a('string').and.to.not.be.empty;",
							"        pm.expect(item).to.have.property('section').that.is.a('string').and.to.not.be.empty;",
							"        pm.expect(item).to.have.property('location').that.is.a('string').and.to.not.be.empty;",
							"        pm.expect(item).to.have.property('course').that.is.a('string').and.to.not.be.empty;",
							"        pm.expect(item).to.have.property('session').that.is.a('string').and.to.not.be.empty;",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Data array is present and contains at least one element\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.data).to.be.an('array').and.to.have.lengthOf.at.least(1);",
							"});",
							"",
							"",
							"pm.test(\"Subject code is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData.data).to.be.an('array');",
							"  responseData.data.forEach(function(item) {",
							"    pm.expect(item.subject.subjectCode).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Subject code should not be empty\");",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"IsElective field in the subject object is a boolean\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.data).to.be.an('array');",
							"    responseData.data.forEach(function(item) {",
							"        pm.expect(item.subject.isElective).to.be.a('boolean');",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/faculty/Subjects?employeeCode=110262198424",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"faculty",
						"Subjects"
					],
					"query": [
						{
							"key": "employeeCode",
							"value": "110262198424"
						}
					]
				},
				"description": "_**Gives the Subjects taught by a particular faculty**_"
			},
			"response": [
				{
					"name": "FacultySubjectList",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/faculty/Subjects?employeeCode=0640",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"faculty",
								"Subjects"
							],
							"query": [
								{
									"key": "employeeCode",
									"value": "0640"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "314"
						},
						{
							"key": "ETag",
							"value": "W/\"13a-HZmSmOxeyUmsAKU7rN3Bn4AVkCo\""
						},
						{
							"key": "Date",
							"value": "Mon, 17 Feb 2025 10:31:37 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"ok\",\n    \"message\": \"Success\",\n    \"data\": [\n        {\n            \"subject\": {\n                \"_id\": \"678dfa8ad5665f6a3eb3fa67\",\n                \"subjectCode\": \"CSE357\",\n                \"subjectName\": \"Advanced Data Structures\",\n                \"department\": \"CSE\",\n                \"isElective\": false\n            },\n            \"branch\": \"CSE\",\n            \"semester\": \"VI\",\n            \"section\": \"1\",\n            \"location\": \"LRC A Block Ground Floor\",\n            \"course\": \"B-Tech\",\n            \"session\": \"2022-26\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "FacultyAttendanceClasswise",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - status, message, and data\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('status');",
							"    pm.expect(responseData).to.have.property('message');",
							"    pm.expect(responseData).to.have.property('data');",
							"});",
							"",
							"",
							"pm.test(\"TotalClass is a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.data.totalClass).to.be.a('number').and.to.be.at.least(0);",
							"});",
							"",
							"",
							"pm.test(\"Attendance data contains the expected number of elements\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.data.attendace).to.be.an('object').and.to.have.property('2211201101');",
							"    pm.expect(Object.keys(responseData.data.attendace)).to.have.lengthOf(80);",
							"});",
							"",
							"",
							"pm.test(\"Each attendance value is either 0 or a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData.data).to.be.an('object');",
							"  ",
							"    Object.values(responseData.data.attendace).forEach(attendance => {",
							"        pm.expect(attendance).to.satisfy(val => Number.isInteger(val) && val >= 0, \"Attendance value should be a non-negative integer\");",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"ownerId\":\"678ce4d0cd76735183ab8350\",\r\n    \"subjectId\":\"678dfa8ad5665f6a3eb3fa67\",\r\n    \"course\":\"B-Tech\",\r\n    \"branch\":\"CSE\",\r\n    \"semester\":\"VI\",\r\n    \"section\":\"1\",\r\n    \"session\":\"2022-26\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/faculty/attendance/classwise",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"faculty",
						"attendance",
						"classwise"
					]
				},
				"description": "### _**This is the api responsible to handle the data of attendance of a particular class in a particular subject taught by the faculty .**_"
			},
			"response": [
				{
					"name": "New Request",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ownerId\":\"678ce4d0cd76735183ab8350\",\r\n    \"subjectId\":\"678dfa8ad5665f6a3eb3fa67\",\r\n    \"course\":\"B-Tech\",\r\n    \"branch\":\"CSE\",\r\n    \"semester\":\"VI\",\r\n    \"section\":\"1\",\r\n    \"session\":\"2022-26\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/faculty/attendance/classwise",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"faculty",
								"attendance",
								"classwise"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "1312"
						},
						{
							"key": "ETag",
							"value": "W/\"520-W0zDZ3/4V04Vcu44gMpb01Wikrs\""
						},
						{
							"key": "Date",
							"value": "Mon, 17 Feb 2025 10:28:18 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"ok\",\n    \"message\": \"Success\",\n    \"data\": {\n        \"totalClass\": 11,\n        \"attendace\": {\n            \"2211201101\": 9,\n            \"2211201102\": 7,\n            \"2211201103\": 10,\n            \"2211201104\": 10,\n            \"2211201105\": 9,\n            \"2211201106\": 10,\n            \"2211201107\": 10,\n            \"2211201108\": 8,\n            \"2211201109\": 11,\n            \"2211201110\": 10,\n            \"2211201111\": 10,\n            \"2211201112\": 11,\n            \"2211201113\": 8,\n            \"2211201114\": 11,\n            \"2211201115\": 10,\n            \"2211201116\": 10,\n            \"2211201117\": 11,\n            \"2211201118\": 11,\n            \"2211201119\": 10,\n            \"2211201120\": 10,\n            \"2211201121\": 10,\n            \"2211201122\": 11,\n            \"2211201123\": 8,\n            \"2211201124\": 11,\n            \"2211201125\": 10,\n            \"2211201126\": 11,\n            \"2211201127\": 5,\n            \"2211201128\": 4,\n            \"2211201129\": 9,\n            \"2211201130\": 11,\n            \"2211201131\": 11,\n            \"2211201132\": 11,\n            \"2211201133\": 2,\n            \"2211201134\": 11,\n            \"2211201135\": 11,\n            \"2211201137\": 7,\n            \"2211201138\": 11,\n            \"2211201139\": 10,\n            \"2211201140\": 10,\n            \"2211201141\": 10,\n            \"2211201142\": 9,\n            \"2211201143\": 11,\n            \"2211201144\": 11,\n            \"2211201145\": 8,\n            \"2211201146\": 7,\n            \"2211201147\": 10,\n            \"2211201148\": 11,\n            \"2211201149\": 11,\n            \"2211201150\": 10,\n            \"2211201151\": 11,\n            \"2211201152\": 9,\n            \"2211201153\": 7,\n            \"2211201154\": 6,\n            \"2211201155\": 9,\n            \"2211201156\": 10,\n            \"2211201157\": 9,\n            \"2211201158\": 10,\n            \"2211201159\": 10,\n            \"2211201160\": 11,\n            \"2211201161\": 9,\n            \"2211201162\": 10,\n            \"2211201163\": 11,\n            \"2211201164\": 11,\n            \"2211201165\": 11,\n            \"2211201166\": 10,\n            \"2211201167\": 11,\n            \"2211201168\": 11,\n            \"2211201169\": 11,\n            \"2211201170\": 8,\n            \"2211201171\": 11,\n            \"2211201172\": 9,\n            \"2211201173\": 11,\n            \"2211201174\": 10,\n            \"2211201175\": 8,\n            \"2211201176\": 10,\n            \"2211201177\": 6,\n            \"2211201178\": 2,\n            \"2211201179\": 9,\n            \"2211201180\": 11\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "StudetOverallReport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>Subject Name</th>\r",
							"        <th>Subject Code</th>\r",
							"        <th>Employee</th>\r",
							"        <th>Total</th>\r",
							"        <th>Present</th>\r",
							"    </tr>\r",
							"    \r",
							"    {{#each response.summary}}\r",
							"        <tr>\r",
							"            <td>{{subName}}</td>\r",
							"            <td>{{subCode}}</td>\r",
							"            <td>{{employee}}</td>\r",
							"            <td>{{total}}</td>\r",
							"            <td>{{present}}</td>\r",
							"        </tr>\r",
							"    {{/each}}\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    return { response: pm.response.json() }\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"  pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.studentName).to.exist;",
							"    pm.expect(responseData.scholarNumber).to.exist;",
							"    pm.expect(responseData.summary).to.exist;",
							"  });",
							"",
							"",
							"pm.test(\"Summary array should exist and be an array\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData.summary).to.exist;",
							"  pm.expect(responseData.summary).to.be.an('array');",
							"});",
							"",
							"pm.test(\"Each item in the summary array should have subName, subCode, employee, total, and present properties\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  responseData.summary.forEach(function(item) {",
							"    pm.expect(item.subName).to.exist;",
							"    pm.expect(item.subCode).to.exist;",
							"    pm.expect(item.employee).to.exist;",
							"    pm.expect(item.total).to.exist;",
							"    pm.expect(item.present).to.exist;",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"Total and present values are non-negative integers\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.summary).to.be.an('array');",
							"",
							"    responseData.summary.forEach((item) => {",
							"        pm.expect(item.total).to.be.a('number').and.to.be.at.least(0);",
							"        pm.expect(item.present).to.be.a('number').and.to.be.at.least(0);",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "authorization",
						"value": "{{vault:json-web-token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"scholarNumber\":\"2211201152\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://10.3.1.6:3000/api/attendance/attendanceByScholarId",
					"protocol": "http",
					"host": [
						"10",
						"3",
						"1",
						"6"
					],
					"port": "3000",
					"path": [
						"api",
						"attendance",
						"attendanceByScholarId"
					]
				}
			},
			"response": [
				{
					"name": "StudetOverallReport",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "authorization",
								"value": "{{vault:json-web-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"scholarNumber\":\"2211201152\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://10.3.1.6:3000/api/attendance/attendanceByScholarId",
							"protocol": "http",
							"host": [
								"10",
								"3",
								"1",
								"6"
							],
							"port": "3000",
							"path": [
								"api",
								"attendance",
								"attendanceByScholarId"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "734"
						},
						{
							"key": "ETag",
							"value": "W/\"2de-YnR+gwNKwYY6TrZRkP6swHdX0NM\""
						},
						{
							"key": "Date",
							"value": "Thu, 10 Apr 2025 12:21:00 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"studentName\": \"VELPUCHERLA YOGANANDA REDDY\",\n    \"scholarNumber\": \"2211201152\",\n    \"summary\": [\n        {\n            \"subName\": \"Network & System Securities (T)\",\n            \"subCode\": \"CSE323\",\n            \"employee\": \"Deepak Singh Tomar\",\n            \"total\": 22,\n            \"present\": 22\n        },\n        {\n            \"subName\": \"Advanced Data Structures\",\n            \"subCode\": \"CSE357\",\n            \"employee\": \"Meenu Chawla\",\n            \"total\": 11,\n            \"present\": 11\n        },\n        {\n            \"subName\": \"Machine Learning\",\n            \"subCode\": \"CSE321\",\n            \"employee\": \"R. K. Pateriya\",\n            \"total\": 7,\n            \"present\": 7\n        },\n        {\n            \"subName\": \"Machine Learning Lab\",\n            \"subCode\": \"CSE324\",\n            \"employee\": \"R. K. Pateriya\",\n            \"total\": 0,\n            \"present\": 0\n        },\n        {\n            \"subName\": \"Network & System Securities (T)\",\n            \"subCode\": \"CSE323\",\n            \"employee\": \"Pankaj Kumar\",\n            \"total\": 1,\n            \"present\": 1\n        },\n        {\n            \"subName\": \"Hadoop & CUDA Lab\",\n            \"subCode\": \"CSE326\",\n            \"employee\": \"Yadunath Pathak\",\n            \"total\": 0,\n            \"present\": 0\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "FaculityListDepartmentWise",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function(faculty) {",
							"        pm.expect(faculty).to.have.property('_id');",
							"        pm.expect(faculty).to.have.property('name');",
							"        pm.expect(faculty).to.have.property('employeeCode');",
							"        pm.expect(faculty).to.have.property('role');",
							"        pm.expect(faculty).to.have.property('department');",
							"        pm.expect(faculty).to.have.property('abbreviation');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"EmployeeCode is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function(faculty) {",
							"        pm.expect(faculty.employeeCode).to.be.a('string').and.to.have.lengthOf.at.least(1, \"EmployeeCode should not be empty\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Role is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('array');",
							"  responseData.forEach(function(faculty) {",
							"    pm.expect(faculty.role).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Role should not be empty\");",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"Department is 'CSE'\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    responseData.forEach(function(faculty) {",
							"        pm.expect(faculty.department).to.equal(\"CSE\");",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/faculty/list?department=CSE",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"faculty",
						"list"
					],
					"query": [
						{
							"key": "department",
							"value": "CSE"
						}
					]
				},
				"description": "### Gives the Faculty List Departmental Wise"
			},
			"response": [
				{
					"name": "FacultyListDepartmentWise",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/faculty/list?department=CSE",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"faculty",
								"list"
							],
							"query": [
								{
									"key": "department",
									"value": "CSE"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "4101"
						},
						{
							"key": "ETag",
							"value": "W/\"1005-QSG0mYcNkRUDrv/HjMfisY11eAc\""
						},
						{
							"key": "Date",
							"value": "Mon, 17 Feb 2025 12:32:52 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"name\": \"Meenu Chawla\",\n        \"employeeCode\": \"0640\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"MC\"\n    },\n    {\n        \"name\": \"Nilay Khare\",\n        \"employeeCode\": \"1145\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"NK\"\n    },\n    {\n        \"name\": \"R. K. Pateriya\",\n        \"employeeCode\": \"824\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"RKP\"\n    },\n    {\n        \"name\": \"Deepak Singh Tomar\",\n        \"employeeCode\": \"1067\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"DST\"\n    },\n    {\n        \"name\": \"Vasudev Dehalwar\",\n        \"employeeCode\": \"805\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"VD\"\n    },\n    {\n        \"name\": \"Manish Pandey\",\n        \"employeeCode\": \"110001412044\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"MP\"\n    },\n    {\n        \"name\": \"Mansi Gyanchandani\",\n        \"employeeCode\": \"110082107194\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"MG\"\n    },\n    {\n        \"name\": \"Sanyam Shukla\",\n        \"employeeCode\": \"110071438193\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"SS\"\n    },\n    {\n        \"name\": \"Jaytrilok Choudhary\",\n        \"employeeCode\": \"111001410822\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"JTC\"\n    },\n    {\n        \"name\": \"Saritha Khetawat\",\n        \"employeeCode\": \"110021412043\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"SK\"\n    },\n    {\n        \"name\": \"Akhtar Rasool\",\n        \"employeeCode\": \"110031438195\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"AR\"\n    },\n    {\n        \"name\": \"Dhirendra Pratap Singh\",\n        \"employeeCode\": \"110081410840\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"DPS\"\n    },\n    {\n        \"name\": \"Shweta Jain\",\n        \"employeeCode\": \"110011412004\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"SJ\"\n    },\n    {\n        \"name\": \"Mitul Kumar Ahirwal\",\n        \"employeeCode\": \"110056130526\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"MA\"\n    },\n    {\n        \"name\": \"Jyoti Bharti\",\n        \"employeeCode\": \"110001438191\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"JB\"\n    },\n    {\n        \"name\": \"Namita Tiwari\",\n        \"employeeCode\": \"110032107093\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"NT\"\n    },\n    {\n        \"name\": \"Bholanath Roy\",\n        \"employeeCode\": \"110072191476\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"BNR\"\n    },\n    {\n        \"name\": \"Vijay Bhaskar\",\n        \"employeeCode\": \"111102755151\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"VB\"\n    },\n    {\n        \"name\": \"Pragati Agarwal\",\n        \"employeeCode\": \"110173897486\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"PA\"\n    },\n    {\n        \"name\": \"Vaibhav Soni\",\n        \"employeeCode\": \"110114474888\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"VS\"\n    },\n    {\n        \"name\": \"Akash Sinha\",\n        \"employeeCode\": \"110178736963\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"AS\"\n    },\n    {\n        \"name\": \"Yadunath Pathak\",\n        \"employeeCode\": \"110138049596\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"YP\"\n    },\n    {\n        \"name\": \"Shweta Bhandari\",\n        \"employeeCode\": \"11017621676\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"SB\"\n    },\n    {\n        \"name\": \"Aashish Kumar Sahu\",\n        \"employeeCode\": \"110117156803\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"AKS\"\n    },\n    {\n        \"name\": \"Pankaj Kumar\",\n        \"employeeCode\": \"110202315844\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"PK\"\n    },\n    {\n        \"name\": \"Rajesh Wadhvani\",\n        \"employeeCode\": \"110031410848\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"RW\"\n    },\n    {\n        \"name\": \"Vikram Garg\",\n        \"employeeCode\": \"110178597949\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"VG\"\n    },\n    {\n        \"name\": \"Ramesh Kumar Thakur\",\n        \"employeeCode\": \"110262198424\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"RT\"\n    },\n    {\n        \"name\": \"Nikhlesh Pathik\",\n        \"employeeCode\": \"CF12030\",\n        \"role\": \"Contract Faculty\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"NP\"\n    },\n    {\n        \"name\": \"Lalit Kumar\",\n        \"employeeCode\": \"CF12031\",\n        \"role\": \"Contract Faculty\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"LK\"\n    },\n    {\n        \"name\": \"Khushboo Singh\",\n        \"employeeCode\": \"CF12032\",\n        \"role\": \"Contract Faculty\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"KS\"\n    },\n    {\n        \"name\": \"Babita Pathik\",\n        \"employeeCode\": \"CF12033\",\n        \"role\": \"Contract Faculty\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"BP\"\n    },\n    {\n        \"name\": \"Sreemoyee Biswas\",\n        \"employeeCode\": \"CF12034\",\n        \"role\": \"Contract Faculty\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"SBS\"\n    },\n    {\n        \"name\": \"Muktesh Gupta\",\n        \"employeeCode\": \"CF12035\",\n        \"role\": \"Contract Faculty\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"MUG\"\n    },\n    {\n        \"name\": \"Mohit Kushwaha\",\n        \"employeeCode\": \"CF12036\",\n        \"role\": \"Contract Faculty\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"MK\"\n    },\n    {\n        \"name\": \"Rakesh Kundan\",\n        \"employeeCode\": \"211112011\",\n        \"role\": \"STU\",\n        \"department\": \"CSE\"\n    },\n    {\n        \"name\": \"Manisha Singh\",\n        \"employeeCode\": \"2302\",\n        \"role\": \"Prof\",\n        \"department\": \"CSE\",\n        \"abbreviation\": \"MS\"\n    },\n    {\n        \"name\": \"test1\",\n        \"employeeCode\": \"test1\",\n        \"role\": \"STU\",\n        \"department\": \"CSE\"\n    }\n]"
				}
			]
		},
		{
			"name": "GetDepartments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content type header is set to application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Response is an array with at least one element\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Each element in the array has the required fields _id and count\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function(department) {",
							"        pm.expect(department).to.have.property('_id');",
							"        pm.expect(department).to.have.property('count');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Validate _id and count properties\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    ",
							"    responseData.forEach(function(department) {",
							"        pm.expect(department._id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"_id should be a non-empty string\");",
							"        pm.expect(department.count).to.be.a('number').and.to.be.at.least(0, \"count should be a non-negative integer\");",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/director/getDepartments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"director",
						"getDepartments"
					]
				},
				"description": "### This is route through which departments data is transported to the director\n\n- Role Based : Director Role"
			},
			"response": [
				{
					"name": "DepartmentsResponse",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/director/getDepartments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"director",
								"getDepartments"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "317"
						},
						{
							"key": "ETag",
							"value": "W/\"13d-a+SRrmgOVYtvzpambafGrm/hv6I\""
						},
						{
							"key": "Date",
							"value": "Mon, 17 Feb 2025 13:41:33 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"_id\": \"CEPDSM\",\n        \"count\": 5\n    },\n    {\n        \"_id\": \"CHEMISTRY\",\n        \"count\": 10\n    },\n    {\n        \"_id\": \"MGMT\",\n        \"count\": 8\n    },\n    {\n        \"_id\": \"PHY\",\n        \"count\": 17\n    },\n    {\n        \"_id\": \"CSE\",\n        \"count\": 38\n    },\n    {\n        \"_id\": \"ENERGY\",\n        \"count\": 8\n    },\n    {\n        \"_id\": \"ECE\",\n        \"count\": 27\n    },\n    {\n        \"_id\": \"EE\",\n        \"count\": 28\n    },\n    {\n        \"_id\": \"MME\",\n        \"count\": 9\n    },\n    {\n        \"_id\": \"HSS\",\n        \"count\": 5\n    },\n    {\n        \"_id\": \"110202195592\",\n        \"count\": 1\n    },\n    {\n        \"_id\": \"CHEM\",\n        \"count\": 13\n    }\n]"
				}
			]
		},
		{
			"name": "FacultyAttendance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `\r",
							"<canvas id=\"myChart\" height=\"75\"></canvas>\r",
							"\r",
							"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script> \r",
							"\r",
							"<script>\r",
							"    var ctx = document.getElementById(\"myChart\");\r",
							"\r",
							"    var myChart = new Chart(ctx, {\r",
							"        type: \"bar\",\r",
							"        data: {\r",
							"            labels: [],\r",
							"            datasets: [{\r",
							"                data: [],\r",
							"                \r",
							"                // Change these colours to customize the chart\r",
							"                backgroundColor: [\"#003f5c\", \"#58508d\", \"#bc5090\", \"#ff6361\", \"#ffa600\"],\r",
							"            }]\r",
							"        },\r",
							"        options: {\r",
							"            legend: { display: false },\r",
							"            title: {\r",
							"                display: true,\r",
							"                text: 'Subject Wise Attendance'\r",
							"            },\r",
							"            scales: {\r",
							"                xAxes: [{\r",
							"                    display: true,\r",
							"                    scaleLabel: {\r",
							"                        display: true,\r",
							"                        labelString: 'Subjects'\r",
							"                    }\r",
							"                }],\r",
							"                yAxes: [{\r",
							"                    display: true,\r",
							"                    scaleLabel: {\r",
							"                        display: true,\r",
							"                        labelString: 'Attendance'\r",
							"                    }\r",
							"                }]\r",
							"            }\r",
							"        }\r",
							"\r",
							"    });\r",
							"\r",
							"    // Access the data passed to pm.visualizer.set() from the JavaScript\r",
							"    // code of the Visualizer template\r",
							"    pm.getData(function (err, value) {\r",
							"        myChart.data.labels = value.response.data.map((subject) => subject.subjectName);\r",
							"        myChart.data.datasets[0].data = value.response.data.map((subject) => subject.totalClasses - subject.scheduledClasses);\r",
							"        myChart.update();\r",
							"    });\r",
							"\r",
							"</script>`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    var res = pm.response.json();\r",
							"    \r",
							"    var visualizerData = {\r",
							"        data: res.data\r",
							"    };\r",
							"\r",
							"    return {response: visualizerData};\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Data array is present in the response\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.have.property('data').that.is.an('array');",
							"});",
							"",
							"",
							"pm.test(\"Verify that the 'data' array contains the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.data).to.be.an('array');",
							"    ",
							"    const requiredFields = [\"employeeCode\", \"subjectId\", \"subjectName\", \"subjectCode\", \"branch\", \"semester\", \"section\", \"course\", \"session\", \"scheduledClasses\", \"totalClasses\", \"isMarked\", \"startDate\", \"endDate\", \"unmarkedDates\", \"averageMarkedAttendance\"];",
							"    ",
							"    responseData.data.forEach(function(item) {",
							"        requiredFields.forEach(function(field) {",
							"            pm.expect(item).to.have.property(field);",
							"        });",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Start date and end date should be in valid date format\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.startDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
							"    pm.expect(responseData.endDate).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"employeeCode\": \"0640\",\r\n  \r\n       \"endDate\":\"2025-03-13T00:00:00.000Z\"\r\n\r\n\r\n\r\n    \r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/faculty/facultyAttendance",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"faculty",
						"facultyAttendance"
					]
				},
				"description": "### _**It will return the report of the faculty's attendance . Tell's how many classes were scheduledadhow many did he take in them between two dates**_\n\n> Role based : Director , HOD"
			},
			"response": [
				{
					"name": "FacultyAttendance",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"employeeCode\":\"0640\",\r\n    \"startDate\":\"2025-01-01T00:00:00Z\",\r\n    \"endDate\":\"2025-01-31T00:00:00Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/faculty/facultyAttendance",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"faculty",
								"facultyAttendance"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "163"
						},
						{
							"key": "ETag",
							"value": "W/\"a3-keyBQ0PGoo6PHHJWr53UjPKSv6M\""
						},
						{
							"key": "Date",
							"value": "Wed, 19 Feb 2025 03:52:41 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"scheduledClasses\": [\n        {\n            \"_id\": \"CSE357\",\n            \"subjectName\": \"Advanced Data Structures\",\n            \"scheduledClasses\": 14\n        }\n    ],\n    \"subjectWiseAttendance\": [\n        [\n            \"CSE357\",\n            {\n                \"total\": 9,\n                \"marked\": 11\n            }\n        ]\n    ]\n}"
				}
			]
		},
		{
			"name": "nameToEmpCode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the Content-Type header set to application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Response body is not empty\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.not.be.empty;",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Verify the response contains the expected fields for employee code\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.employeeCode).to.exist.and.to.be.a('string');",
							"});",
							"",
							"",
							"pm.test(\"Employee code is in the expected format\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.a('string');",
							"    pm.expect(responseData).to.match(/[A-Z]{3}-\\d{3}/);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Ramesh Kumar Thakur\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/faculty/nameToEmpCode",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"faculty",
						"nameToEmpCode"
					]
				},
				"description": "### Takes the input of the user name and gives the employee code"
			},
			"response": [
				{
					"name": "nameToEmpCode",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Ramesh Kumar Thakur\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/faculty/nameToEmpCode",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"faculty",
								"nameToEmpCode"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "14"
						},
						{
							"key": "ETag",
							"value": "W/\"e-YhaMljYupX0i6Vw4qvousGVSZA0\""
						},
						{
							"key": "Date",
							"value": "Wed, 26 Mar 2025 09:56:59 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "\"110262198424\""
				}
			]
		},
		{
			"name": "TimeTable",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"TimeTable object is present in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.have.property('TimeTable');",
							"});",
							"",
							"",
							"pm.test(\"Each day has an array of classes or is empty\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    ",
							"    pm.expect(responseData).to.have.property('TimeTable').that.is.an('object');",
							"    ",
							"    for (let i = 1; i <= 7; i++) {",
							"        pm.expect(responseData.TimeTable).to.have.property(i.toString());",
							"        ",
							"        if (responseData.TimeTable[i.toString()].length > 0) {",
							"            pm.expect(responseData.TimeTable[i.toString()]).to.be.an('array');",
							"        } else {",
							"            pm.expect(responseData.TimeTable[i.toString()]).to.be.an('array').that.is.empty;",
							"        }",
							"    }",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"The TimeTable object should exist and be an object\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.TimeTable).to.exist.and.to.be.an('object');",
							"});",
							"",
							"pm.test(\"Each class includes subject details, branch, semester, timing, section, location, course, and session\", function () {",
							"    const responseData = pm.response.json();",
							"    const timeTable = responseData.TimeTable;",
							"",
							"    Object.keys(timeTable).forEach(day => {",
							"        timeTable[day].forEach(classInfo => {",
							"            pm.expect(classInfo.subject).to.exist.and.to.be.an('object');",
							"            pm.expect(classInfo.branch).to.exist.and.to.be.a('string');",
							"            pm.expect(classInfo.semester).to.exist.and.to.be.a('string');",
							"            pm.expect(classInfo.timing).to.exist.and.to.be.a('string');",
							"            pm.expect(classInfo.section).to.exist.and.to.be.a('string');",
							"            pm.expect(classInfo.location).to.exist.and.to.be.a('string');",
							"            pm.expect(classInfo.course).to.exist.and.to.be.a('string');",
							"            pm.expect(classInfo.session).to.exist.and.to.be.a('string');",
							"        });",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"employeeCode\":\"110262198424\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/faculty/timetable?empCode=0640",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"faculty",
						"timetable"
					],
					"query": [
						{
							"key": "empCode",
							"value": "0640"
						}
					]
				},
				"description": "### This api is for TimeTable of a particular faculty by usig their employeeCode"
			},
			"response": [
				{
					"name": "TimeTable",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"employeeCode\":\"0640\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/faculty/TimeTable",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"faculty",
								"TimeTable"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "932"
						},
						{
							"key": "ETag",
							"value": "W/\"3a4-w4vgrwlDDyNOczDSos5jZf0Gx+Q\""
						},
						{
							"key": "Date",
							"value": "Thu, 13 Mar 2025 11:00:14 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"1\": [\n        {\n            \"subject\": {\n                \"_id\": \"678dfa8ad5665f6a3eb3fa67\",\n                \"subjectCode\": \"CSE357\",\n                \"subjectName\": \"Advanced Data Structures\",\n                \"department\": \"CSE\",\n                \"isElective\": false\n            },\n            \"branch\": \"CSE\",\n            \"semester\": \"VI\",\n            \"timing\": \"12:00-01:00PM\",\n            \"section\": \"1\",\n            \"location\": \"LRC A Block Ground Floor\",\n            \"course\": \"B-Tech\",\n            \"session\": \"2022-26\"\n        }\n    ],\n    \"2\": [],\n    \"3\": [\n        {\n            \"subject\": {\n                \"_id\": \"678dfa8ad5665f6a3eb3fa67\",\n                \"subjectCode\": \"CSE357\",\n                \"subjectName\": \"Advanced Data Structures\",\n                \"department\": \"CSE\",\n                \"isElective\": false\n            },\n            \"branch\": \"CSE\",\n            \"semester\": \"VI\",\n            \"timing\": \"11:00-12:00PM\",\n            \"section\": \"1\",\n            \"location\": \"LRC A Block Ground Floor\",\n            \"course\": \"B-Tech\",\n            \"session\": \"2022-26\"\n        }\n    ],\n    \"4\": [],\n    \"5\": [\n        {\n            \"subject\": {\n                \"_id\": \"678dfa8ad5665f6a3eb3fa67\",\n                \"subjectCode\": \"CSE357\",\n                \"subjectName\": \"Advanced Data Structures\",\n                \"department\": \"CSE\",\n                \"isElective\": false\n            },\n            \"branch\": \"CSE\",\n            \"semester\": \"VI\",\n            \"timing\": \"12:00-01:00PM\",\n            \"section\": \"1\",\n            \"location\": \"LRC A Block Ground Floor\",\n            \"course\": \"B-Tech\",\n            \"session\": \"2022-26\"\n        }\n    ],\n    \"6\": [],\n    \"7\": []\n}"
				}
			]
		},
		{
			"name": "GetClassReport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>Name</th>\r",
							"        <th>Total Present</th>\r",
							"    </tr>\r",
							"    \r",
							"    {{#each response.report}}\r",
							"        <tr>\r",
							"            <td>{{_id.name.[0].[0]}}</td>\r",
							"            <td>{{totalPresent}}</td>\r",
							"        </tr>\r",
							"    {{/each}}\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    return {response: pm.response.json()}\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Report array and its elements structure should be valid\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.report).to.be.an('array');",
							"    ",
							"    responseData.report.forEach(function(item) {",
							"        pm.expect(item).to.be.an('object');",
							"        pm.expect(item.totalPresent).to.exist.and.to.be.a('number');",
							"        pm.expect(item.scholarNumber).to.exist.and.to.be.a('string');",
							"        pm.expect(item.name).to.exist.and.to.be.a('string');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"TotalClasses is a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.totalClasses).to.be.a('number').and.to.be.at.least(0);",
							"});",
							"",
							"",
							"pm.test(\"Ensure that 'scholarNumber' and 'name' in each 'report' element are non-empty strings\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.report).to.be.an('array');",
							"    responseData.report.forEach(function(reportItem) {",
							"        pm.expect(reportItem.scholarNumber).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"        pm.expect(reportItem.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"    });",
							"});",
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Total classes value is a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.totalClasses).to.be.a('number').and.to.be.at.least(0);",
							"});",
							"",
							"",
							"pm.test(\"Report array is present and contains expected number of elements\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.report).to.be.an('array');",
							"    pm.expect(responseData.report.length).to.equal(1);",
							"});",
							"",
							"",
							"pm.test(\"Total present is a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.report).to.be.an('array');",
							"    ",
							"    responseData.report.forEach(function(student) {",
							"        pm.expect(student.totalPresent).to.be.a('number').and.to.be.at.least(0);",
							"    });",
							"});",
							"",
							"pm.test(\"Scholar number is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.report).to.be.an('array');",
							"    ",
							"    responseData.report.forEach(function(student) {",
							"        pm.expect(student.scholarNumber).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"    });",
							"});",
							"",
							"pm.test(\"Name is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.report).to.be.an('array');",
							"    ",
							"    responseData.report.forEach(function(student) {",
							"        pm.expect(student.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"employeeCode\": \"0640\",\r\n    \"subjectId\": \"678dfa8ad5665f6a3eb3fa67\",\r\n    \"branch\": \"CSE\",\r\n    \"section\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/faculty/classReport",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"faculty",
						"classReport"
					]
				},
				"description": "#### **This endpoint returns the data of the attendance of the students of a particular class in a particular subject**"
			},
			"response": [
				{
					"name": "New Request",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"employeeCode\": \"0640\",\r\n    \"subjectId\": \"678dfa8ad5665f6a3eb3fa67\",\r\n    \"branch\": \"CSE\",\r\n    \"section\": \"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/faculty/classReport",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"faculty",
								"classReport"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "3671"
						},
						{
							"key": "ETag",
							"value": "W/\"e57-EOJqkPQ9+qVbAQ4YLsfS8isqrNg\""
						},
						{
							"key": "Date",
							"value": "Wed, 26 Mar 2025 10:21:49 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"totalClasses\": 11,\n    \"report\": [\n        {\n            \"totalPresent\": 8,\n            \"name\": \"EDUPUGANTI YASWANTH\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Aditya  Raj Singh   Bhadoria\"\n        },\n        {\n            \"totalPresent\": 9,\n            \"name\": \"Mayank  suryavanshi\"\n        },\n        {\n            \"totalPresent\": 7,\n            \"name\": \"Samala Pramod\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"VEMULA TEJA MANIDEEP\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"RITIK  CHAND\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"sakshi  rai\"\n        },\n        {\n            \"totalPresent\": 9,\n            \"name\": \"Ashlin  Jojy\"\n        },\n        {\n            \"totalPresent\": 8,\n            \"name\": \"ANIKET SANJAY BHUJBAL\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Sameeksha  Prusty\"\n        },\n        {\n            \"totalPresent\": 8,\n            \"name\": \"Utkarsh  Solanki\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Aaditya Pahariya\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"chaitanya shailesh kulkarni\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"RISHIKA  BUWADE\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"ARUN KUMAR\"\n        },\n        {\n            \"totalPresent\": 9,\n            \"name\": \"Mansi Upadhyay\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Parag  Sewani\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"KRATIK  MEHTA\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Rahul  Kumar\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Rahul Kumar\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Pawan Kumar Tiwari\"\n        },\n        {\n            \"totalPresent\": 7,\n            \"name\": \"PALAK AGRAWAL\"\n        },\n        {\n            \"totalPresent\": 8,\n            \"name\": \"Suraj  Dhakad\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Karan Ajaykumar Kute\"\n        },\n        {\n            \"totalPresent\": 7,\n            \"name\": \"Shayan Fahimi\"\n        },\n        {\n            \"totalPresent\": 9,\n            \"name\": \"PRANJAL JAIN\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"KUMMARI  SIDDHARTH\"\n        },\n        {\n            \"totalPresent\": 5,\n            \"name\": \"sanskrati  khujvar\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"ROHIT  RATAN NAGAR\"\n        },\n        {\n            \"totalPresent\": 8,\n            \"name\": \"Ankit  Choudhary\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Utkarsh Gupta\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"SHAIK  ABDUL HAFEEZ\"\n        },\n        {\n            \"totalPresent\": 9,\n            \"name\": \"SHREYANSH SINGH\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Nallipogu Poojitha\"\n        },\n        {\n            \"totalPresent\": 9,\n            \"name\": \"VELPUCHERLA YOGANANDA REDDY\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Keerthi   Bommareddy\"\n        },\n        {\n            \"totalPresent\": 9,\n            \"name\": \"Venkata Sai Sasikar     Bachali\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Arpit Verma\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Dhananjay Borban\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Aditya  Dubey\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"princy  patwa\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"CHERUKURI LALITH SRI SAI\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"SWASTIK  DUBEY\"\n        },\n        {\n            \"totalPresent\": 7,\n            \"name\": \"Chirag singh  paliya\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"HUSAIN  MATKAWALA\"\n        },\n        {\n            \"totalPresent\": 6,\n            \"name\": \"MALLAVOLU S N S R S G V VISWANADH\"\n        },\n        {\n            \"totalPresent\": 9,\n            \"name\": \"Ajay Sharma\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Govinda Rathore\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Satyam Gupta\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Prem  Kumar\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"SAMARTH AGRAWAL\"\n        },\n        {\n            \"totalPresent\": 9,\n            \"name\": \"Abhinav Chawda\"\n        },\n        {\n            \"totalPresent\": 6,\n            \"name\": \"K  Sujith  Kumar\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Naman  Agrawal\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"KALPIT NAGAR\"\n        },\n        {\n            \"totalPresent\": 8,\n            \"name\": \"GUPTA DEVESH PRADEEP KUMAR\"\n        },\n        {\n            \"totalPresent\": 4,\n            \"name\": \"GADI CHARAN SHYAM\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Khushi  Sayyed\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"SABA SAIYEDA\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Yagyesh  Goyal\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Tanmay  Jha\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"CHARLOTTE ANN SINGH\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Pranshu  Agrawal\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Adithya  Salel\"\n        },\n        {\n            \"totalPresent\": 2,\n            \"name\": \"SUBRATA HALDAR\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Keshav Anand Bhagat\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Tasila  Poorna  shree\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"cheenepalli sai pavan\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"ARSALAN  MOID\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Mohammad  Faiz Chouhan\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Prajjwal Chouhan\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"SUDHANSHU MAHLE\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"Pratik  Verma\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"SRAJAN BHAGAT\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Abhinav Kumar Yadav\"\n        },\n        {\n            \"totalPresent\": 2,\n            \"name\": \"Saurav  Kumar\"\n        },\n        {\n            \"totalPresent\": 10,\n            \"name\": \"SANJAY KOTHAPALLI\"\n        },\n        {\n            \"totalPresent\": 9,\n            \"name\": \"MAMUNURI  VISHWENDRA CHARY\"\n        },\n        {\n            \"totalPresent\": 11,\n            \"name\": \"Ajay Yadav\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "getSubjectsAccToSection",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - subCode, subjectName, subjectId, and ownerId\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.subjects).to.be.an('array');",
							"    ",
							"    responseData.subjects.forEach(function(subject) {",
							"        pm.expect(subject.subCode).to.exist;",
							"        pm.expect(subject.subjectName).to.exist;",
							"        pm.expect(subject.subjectId).to.exist;",
							"        pm.expect(subject.ownerId).to.exist;",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Each subject contains non-empty subCode, subjectName, subjectId, and ownerId\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.subjects).to.be.an('array');",
							"    responseData.subjects.forEach(function(subject) {",
							"        pm.expect(subject.subCode).to.be.a('string').and.to.have.lengthOf.at.least(1, \"subCode should not be empty\");",
							"        pm.expect(subject.subjectName).to.be.a('string').and.to.have.lengthOf.at.least(1, \"subjectName should not be empty\");",
							"        pm.expect(subject.subjectId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"subjectId should not be empty\");",
							"        pm.expect(subject.ownerId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ownerId should not be empty\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Subjects array is present and contains at least one element\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.subjects).to.exist.and.to.be.an('array').that.is.not.empty;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/director/getSubjectsAccToSection?branch=CSE&session=2022-26&section=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"director",
						"getSubjectsAccToSection"
					],
					"query": [
						{
							"key": "branch",
							"value": "CSE"
						},
						{
							"key": "session",
							"value": "2022-26"
						},
						{
							"key": "section",
							"value": "1"
						}
					]
				}
			},
			"response": [
				{
					"name": "New Request",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/director/getSubjectsAccToSection?branch=CSE&session=2022-26&section=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"director",
								"getSubjectsAccToSection"
							],
							"query": [
								{
									"key": "branch",
									"value": "CSE"
								},
								{
									"key": "session",
									"value": "2022-26"
								},
								{
									"key": "section",
									"value": "1"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "692"
						},
						{
							"key": "ETag",
							"value": "W/\"2b4-f1jLn6Y0elEWXT+AkHD3QounrR0\""
						},
						{
							"key": "Date",
							"value": "Sat, 29 Mar 2025 12:55:02 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"subjects\": [\n        {\n            \"subCode\": \"CSE357\",\n            \"subjectName\": \"Advanced Data Structures\",\n            \"subjectId\": \"678dfa8ad5665f6a3eb3fa67\",\n            \"ownerId\": \"678ce4d0cd76735183ab8350\"\n        },\n        {\n            \"subCode\": \"CSE321\",\n            \"subjectName\": \"Machine Learning\",\n            \"subjectId\": \"678ce483cd76735183ab8347\",\n            \"ownerId\": \"678ce4d1cd76735183ab8354\"\n        },\n        {\n            \"subCode\": \"CSE324\",\n            \"subjectName\": \"Machine Learning Lab\",\n            \"subjectId\": \"678ce483cd76735183ab834e\",\n            \"ownerId\": \"678ce4d1cd76735183ab8354\"\n        },\n        {\n            \"subCode\": \"CSE323\",\n            \"subjectName\": \"Network & System Securities (T)\",\n            \"subjectId\": \"678ce483cd76735183ab8349\",\n            \"ownerId\": \"678ce4d1cd76735183ab8356\"\n        },\n        {\n            \"subCode\": \"CSE326\",\n            \"subjectName\": \"Hadoop & CUDA Lab\",\n            \"subjectId\": \"678ce483cd76735183ab834f\",\n            \"ownerId\": \"678ce4d5cd76735183ab837a\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "ownerIdToEmp",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Result array should have correct structure\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData.result).to.be.an('array');",
							"  responseData.result.forEach(function(item) {",
							"    pm.expect(item).to.be.an('object');",
							"    pm.expect(item._id).to.be.a('string');",
							"    pm.expect(item.employeeCode).to.be.a('string');",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"Each object in the 'result' array has non-empty '_id' and 'employeeCode' fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.result).to.be.an('array');",
							"",
							"    responseData.result.forEach(function (item) {",
							"        pm.expect(item._id).to.exist.and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"        pm.expect(item.employeeCode).to.exist.and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Result array should contain at least one element\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData.result).to.be.an('array').that.is.not.empty;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/director/ownerIdToEmp",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"director",
						"ownerIdToEmp"
					]
				}
			},
			"response": [
				{
					"name": "ownerIdToEmp",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/director/ownerIdToEmp",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"director",
								"ownerIdToEmp"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Security-Policy",
							"value": "default-src 'self';script-src 'self';style-src 'self' 'unsafe-inline' fonts.googleapis.com;img-src 'self' data:;connect-src 'self';font-src 'self' fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';form-action 'self';base-uri 'self';frame-ancestors 'self';script-src-attr 'none'"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Resource-Policy",
							"value": "same-origin"
						},
						{
							"key": "Origin-Agent-Cluster",
							"value": "?1"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000; includeSubDomains"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-DNS-Prefetch-Control",
							"value": "off"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "X-Permitted-Cross-Domain-Policies",
							"value": "none"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "14720"
						},
						{
							"key": "ETag",
							"value": "W/\"3980-UeWpsB0SVyYBN6wsPNpifPpwwEM\""
						},
						{
							"key": "Date",
							"value": "Thu, 10 Apr 2025 12:15:35 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"result\": [\n        {\n            \"_id\": \"678ce4d0cd76735183ab8350\",\n            \"employeeCode\": \"0640\"\n        },\n        {\n            \"_id\": \"678ce4d0cd76735183ab8352\",\n            \"employeeCode\": \"1145\"\n        },\n        {\n            \"_id\": \"678ce4d1cd76735183ab8354\",\n            \"employeeCode\": \"824\"\n        },\n        {\n            \"_id\": \"678ce4d1cd76735183ab8356\",\n            \"employeeCode\": \"1067\"\n        },\n        {\n            \"_id\": \"678ce4d1cd76735183ab8358\",\n            \"employeeCode\": \"805\"\n        },\n        {\n            \"_id\": \"678ce4d1cd76735183ab835a\",\n            \"employeeCode\": \"110001412044\"\n        },\n        {\n            \"_id\": \"678ce4d2cd76735183ab835c\",\n            \"employeeCode\": \"110082107194\"\n        },\n        {\n            \"_id\": \"678ce4d2cd76735183ab835e\",\n            \"employeeCode\": \"110071438193\"\n        },\n        {\n            \"_id\": \"678ce4d2cd76735183ab8360\",\n            \"employeeCode\": \"111001410822\"\n        },\n        {\n            \"_id\": \"678ce4d2cd76735183ab8362\",\n            \"employeeCode\": \"110021412043\"\n        },\n        {\n            \"_id\": \"678ce4d3cd76735183ab8364\",\n            \"employeeCode\": \"110031438195\"\n        },\n        {\n            \"_id\": \"678ce4d3cd76735183ab8366\",\n            \"employeeCode\": \"110081410840\"\n        },\n        {\n            \"_id\": \"678ce4d3cd76735183ab8368\",\n            \"employeeCode\": \"110011412004\"\n        },\n        {\n            \"_id\": \"678ce4d3cd76735183ab836a\",\n            \"employeeCode\": \"110056130526\"\n        },\n        {\n            \"_id\": \"678ce4d4cd76735183ab836c\",\n            \"employeeCode\": \"110001438191\"\n        },\n        {\n            \"_id\": \"678ce4d4cd76735183ab836e\",\n            \"employeeCode\": \"110032107093\"\n        },\n        {\n            \"_id\": \"678ce4d4cd76735183ab8370\",\n            \"employeeCode\": \"110072191476\"\n        },\n        {\n            \"_id\": \"678ce4d4cd76735183ab8372\",\n            \"employeeCode\": \"111102755151\"\n        },\n        {\n            \"_id\": \"678ce4d5cd76735183ab8374\",\n            \"employeeCode\": \"110173897486\"\n        },\n        {\n            \"_id\": \"678ce4d5cd76735183ab8376\",\n            \"employeeCode\": \"110114474888\"\n        },\n        {\n            \"_id\": \"678ce4d5cd76735183ab8378\",\n            \"employeeCode\": \"110178736963\"\n        },\n        {\n            \"_id\": \"678ce4d5cd76735183ab837a\",\n            \"employeeCode\": \"110138049596\"\n        },\n        {\n            \"_id\": \"678ce4d6cd76735183ab837c\",\n            \"employeeCode\": \"11017621676\"\n        },\n        {\n            \"_id\": \"678ce4d6cd76735183ab837e\",\n            \"employeeCode\": \"110117156803\"\n        },\n        {\n            \"_id\": \"678ce4d6cd76735183ab8380\",\n            \"employeeCode\": \"110202315844\"\n        },\n        {\n            \"_id\": \"678ce4d6cd76735183ab8382\",\n            \"employeeCode\": \"110031410848\"\n        },\n        {\n            \"_id\": \"678ce4d7cd76735183ab8384\",\n            \"employeeCode\": \"110178597949\"\n        },\n        {\n            \"_id\": \"678ce4d7cd76735183ab8386\",\n            \"employeeCode\": \"110262198424\"\n        },\n        {\n            \"_id\": \"678ce4d7cd76735183ab8388\",\n            \"employeeCode\": \"CF12030\"\n        },\n        {\n            \"_id\": \"678ce4d7cd76735183ab838a\",\n            \"employeeCode\": \"CF12031\"\n        },\n        {\n            \"_id\": \"678ce4d8cd76735183ab838c\",\n            \"employeeCode\": \"CF12032\"\n        },\n        {\n            \"_id\": \"678ce4d8cd76735183ab838e\",\n            \"employeeCode\": \"CF12033\"\n        },\n        {\n            \"_id\": \"678ce4d8cd76735183ab8390\",\n            \"employeeCode\": \"CF12034\"\n        },\n        {\n            \"_id\": \"678ce4d8cd76735183ab8392\",\n            \"employeeCode\": \"CF12035\"\n        },\n        {\n            \"_id\": \"678ce4d9cd76735183ab8394\",\n            \"employeeCode\": \"CF12036\"\n        },\n        {\n            \"_id\": \"678ceacaaa5a723fd417fbce\",\n            \"employeeCode\": \"211112011\"\n        },\n        {\n            \"_id\": \"678d0756cd76735183ab844d\",\n            \"employeeCode\": \"CHEM\"\n        },\n        {\n            \"_id\": \"678f34b3d5665f6a3eb3fa97\",\n            \"employeeCode\": \"866\"\n        },\n        {\n            \"_id\": \"678f34b4d5665f6a3eb3fa99\",\n            \"employeeCode\": \"110042107196\"\n        },\n        {\n            \"_id\": \"678f34b4d5665f6a3eb3fa9b\",\n            \"employeeCode\": \"111102755800\"\n        },\n        {\n            \"_id\": \"678f34b4d5665f6a3eb3fa9d\",\n            \"employeeCode\": \"110193897132\"\n        },\n        {\n            \"_id\": \"678f34b5d5665f6a3eb3fa9f\",\n            \"employeeCode\": \"111103897137\"\n        },\n        {\n            \"_id\": \"678f34b5d5665f6a3eb3faa1\",\n            \"employeeCode\": \"110163897500\"\n        },\n        {\n            \"_id\": \"678f34b5d5665f6a3eb3faa3\",\n            \"employeeCode\": \"110177593020\"\n        },\n        {\n            \"_id\": \"678f34b5d5665f6a3eb3faa5\",\n            \"employeeCode\": \"110178621991\"\n        },\n        {\n            \"_id\": \"678f34b6d5665f6a3eb3faa7\",\n            \"employeeCode\": \"110178597983\"\n        },\n        {\n            \"_id\": \"678f34b6d5665f6a3eb3faa9\",\n            \"employeeCode\": \"CF02002\"\n        },\n        {\n            \"_id\": \"678fd0add5665f6a3eb3fcef\",\n            \"employeeCode\": \"110021410843\"\n        },\n        {\n            \"_id\": \"678fd0add5665f6a3eb3fcf1\",\n            \"employeeCode\": \"110113036099\"\n        },\n        {\n            \"_id\": \"678fd0add5665f6a3eb3fcf3\",\n            \"employeeCode\": \"111105465409\"\n        },\n        {\n            \"_id\": \"678fd0add5665f6a3eb3fcf5\",\n            \"employeeCode\": \"110221060519\"\n        },\n        {\n            \"_id\": \"678fd0aed5665f6a3eb3fcf7\",\n            \"employeeCode\": \"110202199724\"\n        },\n        {\n            \"_id\": \"67908452d5665f6a3eb3fd04\",\n            \"employeeCode\": \"808\"\n        },\n        {\n            \"_id\": \"67908452d5665f6a3eb3fd06\",\n            \"employeeCode\": \"806\"\n        },\n        {\n            \"_id\": \"67908452d5665f6a3eb3fd08\",\n            \"employeeCode\": \"577\"\n        },\n        {\n            \"_id\": \"67908453d5665f6a3eb3fd0a\",\n            \"employeeCode\": \"643\"\n        },\n        {\n            \"_id\": \"67908453d5665f6a3eb3fd0c\",\n            \"employeeCode\": \"655\"\n        },\n        {\n            \"_id\": \"67908453d5665f6a3eb3fd0e\",\n            \"employeeCode\": \"868\"\n        },\n        {\n            \"_id\": \"67908453d5665f6a3eb3fd10\",\n            \"employeeCode\": \"917\"\n        },\n        {\n            \"_id\": \"67908454d5665f6a3eb3fd12\",\n            \"employeeCode\": \"968\"\n        },\n        {\n            \"_id\": \"67908454d5665f6a3eb3fd14\",\n            \"employeeCode\": \"978\"\n        },\n        {\n            \"_id\": \"67908454d5665f6a3eb3fd16\",\n            \"employeeCode\": \"110061412038\"\n        },\n        {\n            \"_id\": \"67908454d5665f6a3eb3fd18\",\n            \"employeeCode\": \"110071412256\"\n        },\n        {\n            \"_id\": \"67908455d5665f6a3eb3fd1a\",\n            \"employeeCode\": \"1006\"\n        },\n        {\n            \"_id\": \"67908455d5665f6a3eb3fd1c\",\n            \"employeeCode\": \"110061412041\"\n        },\n        {\n            \"_id\": \"67908455d5665f6a3eb3fd1e\",\n            \"employeeCode\": \"110081412040\"\n        },\n        {\n            \"_id\": \"67908455d5665f6a3eb3fd20\",\n            \"employeeCode\": \"110041412039\"\n        },\n        {\n            \"_id\": \"67908456d5665f6a3eb3fd22\",\n            \"employeeCode\": \"867\"\n        },\n        {\n            \"_id\": \"67908456d5665f6a3eb3fd24\",\n            \"employeeCode\": \"110052191477\"\n        },\n        {\n            \"_id\": \"67908456d5665f6a3eb3fd26\",\n            \"employeeCode\": \"110033798507\"\n        },\n        {\n            \"_id\": \"67908457d5665f6a3eb3fd28\",\n            \"employeeCode\": \"110001412013\"\n        },\n        {\n            \"_id\": \"67908457d5665f6a3eb3fd2a\",\n            \"employeeCode\": \"110063295307\"\n        },\n        {\n            \"_id\": \"67908457d5665f6a3eb3fd2c\",\n            \"employeeCode\": \"110153897487\"\n        },\n        {\n            \"_id\": \"67908457d5665f6a3eb3fd2e\",\n            \"employeeCode\": \"110175420223\"\n        },\n        {\n            \"_id\": \"67908458d5665f6a3eb3fd30\",\n            \"employeeCode\": \"110151507063\"\n        },\n        {\n            \"_id\": \"67908458d5665f6a3eb3fd32\",\n            \"employeeCode\": \"110179707523\"\n        },\n        {\n            \"_id\": \"67908458d5665f6a3eb3fd34\",\n            \"employeeCode\": \"110178940291\"\n        },\n        {\n            \"_id\": \"67908458d5665f6a3eb3fd36\",\n            \"employeeCode\": \"401000384909\"\n        },\n        {\n            \"_id\": \"67908459d5665f6a3eb3fd38\",\n            \"employeeCode\": \"110212194448\"\n        },\n        {\n            \"_id\": \"6791fa28d5665f6a3eb40234\",\n            \"employeeCode\": \"2302\"\n        },\n        {\n            \"_id\": \"6793802dd5665f6a3eb40265\",\n            \"employeeCode\": \"796\"\n        },\n        {\n            \"_id\": \"6793802ed5665f6a3eb40267\",\n            \"employeeCode\": \"110061412010\"\n        },\n        {\n            \"_id\": \"6793802ed5665f6a3eb40269\",\n            \"employeeCode\": \"110081412037\"\n        },\n        {\n            \"_id\": \"6793802ed5665f6a3eb4026b\",\n            \"employeeCode\": \"110189945654\"\n        },\n        {\n            \"_id\": \"6793802fd5665f6a3eb4026d\",\n            \"employeeCode\": \"110091412045\"\n        },\n        {\n            \"_id\": \"6793802fd5665f6a3eb4026f\",\n            \"employeeCode\": \"110143897501\"\n        },\n        {\n            \"_id\": \"6793802fd5665f6a3eb40271\",\n            \"employeeCode\": \"110178900163\"\n        },\n        {\n            \"_id\": \"67972c8bd5665f6a3eb40287\",\n            \"employeeCode\": \"573\"\n        },\n        {\n            \"_id\": \"67972c8bd5665f6a3eb40289\",\n            \"employeeCode\": \"798\"\n        },\n        {\n            \"_id\": \"67972c8cd5665f6a3eb4028b\",\n            \"employeeCode\": \"797\"\n        },\n        {\n            \"_id\": \"67972c8cd5665f6a3eb4028d\",\n            \"employeeCode\": \"873\"\n        },\n        {\n            \"_id\": \"67972c8cd5665f6a3eb4028f\",\n            \"employeeCode\": \"869\"\n        },\n        {\n            \"_id\": \"67972c8cd5665f6a3eb40291\",\n            \"employeeCode\": \"991\"\n        },\n        {\n            \"_id\": \"67972c8dd5665f6a3eb40293\",\n            \"employeeCode\": \"110061410824\"\n        },\n        {\n            \"_id\": \"67972c8dd5665f6a3eb40295\",\n            \"employeeCode\": \"110103897131\"\n        },\n        {\n            \"_id\": \"67972c8dd5665f6a3eb40297\",\n            \"employeeCode\": \"981\"\n        },\n        {\n            \"_id\": \"67972c8dd5665f6a3eb40299\",\n            \"employeeCode\": \"1008\"\n        },\n        {\n            \"_id\": \"67972c8ed5665f6a3eb4029b\",\n            \"employeeCode\": \"1021\"\n        },\n        {\n            \"_id\": \"67972c8ed5665f6a3eb4029d\",\n            \"employeeCode\": \"111001412036\"\n        },\n        {\n            \"_id\": \"67972c8ed5665f6a3eb4029f\",\n            \"employeeCode\": \"110011412035\"\n        },\n        {\n            \"_id\": \"67972c8fd5665f6a3eb402a1\",\n            \"employeeCode\": \"110031412017\"\n        },\n        {\n            \"_id\": \"67972c8fd5665f6a3eb402a3\",\n            \"employeeCode\": \"110044184932\"\n        },\n        {\n            \"_id\": \"67972c8fd5665f6a3eb402a5\",\n            \"employeeCode\": \"111001412019\"\n        },\n        {\n            \"_id\": \"67972c8fd5665f6a3eb402a7\",\n            \"employeeCode\": \"110011410818\"\n        },\n        {\n            \"_id\": \"67972c90d5665f6a3eb402a9\",\n            \"employeeCode\": \"110145420216\"\n        },\n        {\n            \"_id\": \"67972c90d5665f6a3eb402ab\",\n            \"employeeCode\": \"110179765955\"\n        },\n        {\n            \"_id\": \"67972c90d5665f6a3eb402ad\",\n            \"employeeCode\": \"110178900583\"\n        },\n        {\n            \"_id\": \"67972c90d5665f6a3eb402af\",\n            \"employeeCode\": \"110149925794\"\n        },\n        {\n            \"_id\": \"67972c91d5665f6a3eb402b1\",\n            \"employeeCode\": \"400050423719\"\n        },\n        {\n            \"_id\": \"67972c91d5665f6a3eb402b3\",\n            \"employeeCode\": \"110221060441\"\n        },\n        {\n            \"_id\": \"67972c91d5665f6a3eb402b5\",\n            \"employeeCode\": \"110212316161\"\n        },\n        {\n            \"_id\": \"67972c91d5665f6a3eb402b7\",\n            \"employeeCode\": \"1102\"\n        },\n        {\n            \"_id\": \"67972c92d5665f6a3eb402b9\",\n            \"employeeCode\": \"1101\"\n        },\n        {\n            \"_id\": \"67972c92d5665f6a3eb402bb\",\n            \"employeeCode\": \"1103\"\n        },\n        {\n            \"_id\": \"67972c92d5665f6a3eb402bd\",\n            \"employeeCode\": \"1104\"\n        },\n        {\n            \"_id\": \"67975590d5665f6a3eb40475\",\n            \"employeeCode\": \"110052107092\"\n        },\n        {\n            \"_id\": \"67975590d5665f6a3eb40477\",\n            \"employeeCode\": \"111002107193\"\n        },\n        {\n            \"_id\": \"67975590d5665f6a3eb40479\",\n            \"employeeCode\": \"110181066735\"\n        },\n        {\n            \"_id\": \"67975591d5665f6a3eb4047b\",\n            \"employeeCode\": \"110123897502\"\n        },\n        {\n            \"_id\": \"67975591d5665f6a3eb4047d\",\n            \"employeeCode\": \"110185420214\"\n        },\n        {\n            \"_id\": \"67975591d5665f6a3eb4047f\",\n            \"employeeCode\": \"110104024148\"\n        },\n        {\n            \"_id\": \"67975591d5665f6a3eb40481\",\n            \"employeeCode\": \"110050653256\"\n        },\n        {\n            \"_id\": \"67975592d5665f6a3eb40483\",\n            \"employeeCode\": \"110198834681\"\n        },\n        {\n            \"_id\": \"67975592d5665f6a3eb40485\",\n            \"employeeCode\": \"110178609369\"\n        },\n        {\n            \"_id\": \"679880c7d5665f6a3eb405be\",\n            \"employeeCode\": \"856\"\n        },\n        {\n            \"_id\": \"679880c7d5665f6a3eb405c0\",\n            \"employeeCode\": \"110021412009\"\n        },\n        {\n            \"_id\": \"679880c7d5665f6a3eb405c2\",\n            \"employeeCode\": \"110061412024\"\n        },\n        {\n            \"_id\": \"679880c8d5665f6a3eb405c4\",\n            \"employeeCode\": \"110103897498\"\n        },\n        {\n            \"_id\": \"679880c8d5665f6a3eb405c6\",\n            \"employeeCode\": \"110027466004\"\n        },\n        {\n            \"_id\": \"679880c8d5665f6a3eb405c8\",\n            \"employeeCode\": \"110198684975\"\n        },\n        {\n            \"_id\": \"679880c9d5665f6a3eb405ca\",\n            \"employeeCode\": \"110178969306\"\n        },\n        {\n            \"_id\": \"679880c9d5665f6a3eb405cc\",\n            \"employeeCode\": \"110202195432\"\n        },\n        {\n            \"_id\": \"679880c9d5665f6a3eb405ce\",\n            \"employeeCode\": \"110202195365\"\n        },\n        {\n            \"_id\": \"679880c9d5665f6a3eb405d0\",\n            \"employeeCode\": \"110212194370\"\n        },\n        {\n            \"_id\": \"679880cad5665f6a3eb405d2\",\n            \"employeeCode\": \"110212194398\"\n        },\n        {\n            \"_id\": \"679880cad5665f6a3eb405d4\",\n            \"employeeCode\": \"9720913159\"\n        },\n        {\n            \"_id\": \"679880cad5665f6a3eb405d6\",\n            \"employeeCode\": \"9042765640\"\n        },\n        {\n            \"_id\": \"679880cad5665f6a3eb405d8\",\n            \"employeeCode\": \"9042765640\"\n        },\n        {\n            \"_id\": \"679880cad5665f6a3eb405da\",\n            \"employeeCode\": \"7895814793\"\n        },\n        {\n            \"_id\": \"679880cbd5665f6a3eb405de\",\n            \"employeeCode\": \"8109469890\"\n        },\n        {\n            \"_id\": \"679880cbd5665f6a3eb405e0\",\n            \"employeeCode\": \"8109469890\"\n        },\n        {\n            \"_id\": \"679918925e41b7622d9f146a\",\n            \"employeeCode\": \"test1\"\n        },\n        {\n            \"_id\": \"6799bf5be3054bdf5c973df9\",\n            \"employeeCode\": \"971\"\n        },\n        {\n            \"_id\": \"679cb7d7e3054bdf5c97400f\",\n            \"employeeCode\": \"110105420218\"\n        },\n        {\n            \"_id\": \"67a48239e3054bdf5c97423b\",\n            \"employeeCode\": \"110001438188\"\n        },\n        {\n            \"_id\": \"67a48239e3054bdf5c97423d\",\n            \"employeeCode\": \"111002112913\"\n        },\n        {\n            \"_id\": \"67a4823ae3054bdf5c97423f\",\n            \"employeeCode\": \"111001410819\"\n        },\n        {\n            \"_id\": \"67a4823ae3054bdf5c974241\",\n            \"employeeCode\": \"110091410831\"\n        },\n        {\n            \"_id\": \"67a4823ae3054bdf5c974243\",\n            \"employeeCode\": \"110031410817\"\n        },\n        {\n            \"_id\": \"67a4823ae3054bdf5c974245\",\n            \"employeeCode\": \"110002805598\"\n        },\n        {\n            \"_id\": \"67a4823be3054bdf5c974247\",\n            \"employeeCode\": \"110041410825\"\n        },\n        {\n            \"_id\": \"67a4823be3054bdf5c974249\",\n            \"employeeCode\": \"110041410842\"\n        },\n        {\n            \"_id\": \"67a9dd4fe3054bdf5c974363\",\n            \"employeeCode\": \"110165420215\"\n        },\n        {\n            \"_id\": \"67a9e9f4e3054bdf5c9744ef\",\n            \"employeeCode\": \"110077182926\"\n        },\n        {\n            \"_id\": \"67ad8ff550ae44dffc9cf611\",\n            \"employeeCode\": \"110134467955\"\n        },\n        {\n            \"_id\": \"67ad96a394ea4de47ad3f6db\",\n            \"employeeCode\": \"110001410830\"\n        },\n        {\n            \"_id\": \"67b404d9778cc8bb62460f1f\",\n            \"employeeCode\": \"110135420211\"\n        },\n        {\n            \"_id\": \"67b404d9778cc8bb62460f21\",\n            \"employeeCode\": \"110091438189\"\n        },\n        {\n            \"_id\": \"67b404d9778cc8bb62460f23\",\n            \"employeeCode\": \"110071412015\"\n        },\n        {\n            \"_id\": \"67b404d9778cc8bb62460f25\",\n            \"employeeCode\": \"110031410820\"\n        },\n        {\n            \"_id\": \"67b404da778cc8bb62460f27\",\n            \"employeeCode\": \"110195420219\"\n        },\n        {\n            \"_id\": \"67b404da778cc8bb62460f29\",\n            \"employeeCode\": \"110153897134\"\n        },\n        {\n            \"_id\": \"67b404da778cc8bb62460f2b\",\n            \"employeeCode\": \"110113897136\"\n        },\n        {\n            \"_id\": \"67b404da778cc8bb62460f2d\",\n            \"employeeCode\": \"110125420220\"\n        },\n        {\n            \"_id\": \"67b404db778cc8bb62460f2f\",\n            \"employeeCode\": \"110172679618\"\n        },\n        {\n            \"_id\": \"67b404db778cc8bb62460f31\",\n            \"employeeCode\": \"110133897135\"\n        },\n        {\n            \"_id\": \"67b404db778cc8bb62460f33\",\n            \"employeeCode\": \"110175631437\"\n        },\n        {\n            \"_id\": \"67b404db778cc8bb62460f35\",\n            \"employeeCode\": \"110178598180\"\n        },\n        {\n            \"_id\": \"67b404dc778cc8bb62460f37\",\n            \"employeeCode\": \"110202195592\"\n        },\n        {\n            \"_id\": \"67bd84b24a54f24d2fc7d7f9\",\n            \"employeeCode\": \"555\"\n        },\n        {\n            \"_id\": \"67bd84b34a54f24d2fc7d7fb\",\n            \"employeeCode\": \"803\"\n        },\n        {\n            \"_id\": \"67bd84b34a54f24d2fc7d7fd\",\n            \"employeeCode\": \"802\"\n        },\n        {\n            \"_id\": \"67bd84b34a54f24d2fc7d7ff\",\n            \"employeeCode\": \"871\"\n        },\n        {\n            \"_id\": \"67bd84b34a54f24d2fc7d801\",\n            \"employeeCode\": \"878\"\n        },\n        {\n            \"_id\": \"67bd84b44a54f24d2fc7d803\",\n            \"employeeCode\": \"110061412007\"\n        },\n        {\n            \"_id\": \"67bd84b44a54f24d2fc7d805\",\n            \"employeeCode\": \"110071410829\"\n        },\n        {\n            \"_id\": \"67bd84b44a54f24d2fc7d807\",\n            \"employeeCode\": \"926\"\n        },\n        {\n            \"_id\": \"67bd84b44a54f24d2fc7d809\",\n            \"employeeCode\": \"1010\"\n        },\n        {\n            \"_id\": \"67bd84b54a54f24d2fc7d80b\",\n            \"employeeCode\": \"1014\"\n        },\n        {\n            \"_id\": \"67bd84b54a54f24d2fc7d80d\",\n            \"employeeCode\": \"110030936841\"\n        },\n        {\n            \"_id\": \"67bd84b54a54f24d2fc7d80f\",\n            \"employeeCode\": \"1015\"\n        },\n        {\n            \"_id\": \"67bd84b54a54f24d2fc7d811\",\n            \"employeeCode\": \"110051412047\"\n        },\n        {\n            \"_id\": \"67bd84b64a54f24d2fc7d813\",\n            \"employeeCode\": \"110001412030\"\n        },\n        {\n            \"_id\": \"67bd84b64a54f24d2fc7d815\",\n            \"employeeCode\": \"110001412027\"\n        },\n        {\n            \"_id\": \"67bd84b64a54f24d2fc7d817\",\n            \"employeeCode\": \"110021412026\"\n        },\n        {\n            \"_id\": \"67bd84b64a54f24d2fc7d819\",\n            \"employeeCode\": \"110091412028\"\n        },\n        {\n            \"_id\": \"67bd84b74a54f24d2fc7d81b\",\n            \"employeeCode\": \"110057275107\"\n        },\n        {\n            \"_id\": \"67bd84b74a54f24d2fc7d81d\",\n            \"employeeCode\": \"110071412032\"\n        },\n        {\n            \"_id\": \"67bd84b74a54f24d2fc7d81f\",\n            \"employeeCode\": \"110091412031\"\n        },\n        {\n            \"_id\": \"67bd84b74a54f24d2fc7d821\",\n            \"employeeCode\": \"110071410801\"\n        },\n        {\n            \"_id\": \"67bd84b84a54f24d2fc7d823\",\n            \"employeeCode\": \"110011410835\"\n        },\n        {\n            \"_id\": \"67bd84b84a54f24d2fc7d825\",\n            \"employeeCode\": \"110011410821\"\n        },\n        {\n            \"_id\": \"67bd84b84a54f24d2fc7d827\",\n            \"employeeCode\": \"110031412034\"\n        },\n        {\n            \"_id\": \"67bd84b84a54f24d2fc7d829\",\n            \"employeeCode\": \"110011410849\"\n        },\n        {\n            \"_id\": \"67bd84b94a54f24d2fc7d82b\",\n            \"employeeCode\": \"111103897493\"\n        },\n        {\n            \"_id\": \"67bd84b94a54f24d2fc7d82d\",\n            \"employeeCode\": \"110133897491\"\n        },\n        {\n            \"_id\": \"67bd84b94a54f24d2fc7d82f\",\n            \"employeeCode\": \"110113897492\"\n        },\n        {\n            \"_id\": \"67bd84b94a54f24d2fc7d831\",\n            \"employeeCode\": \"111101309510\"\n        },\n        {\n            \"_id\": \"67bd84ba4a54f24d2fc7d833\",\n            \"employeeCode\": \"110037764396\"\n        },\n        {\n            \"_id\": \"67bd84ba4a54f24d2fc7d835\",\n            \"employeeCode\": \"110115420212\"\n        },\n        {\n            \"_id\": \"67bd84ba4a54f24d2fc7d837\",\n            \"employeeCode\": \"111105420213\"\n        },\n        {\n            \"_id\": \"67bd84ba4a54f24d2fc7d839\",\n            \"employeeCode\": \"110125420217\"\n        },\n        {\n            \"_id\": \"67bd84bb4a54f24d2fc7d83b\",\n            \"employeeCode\": \"110155877857\"\n        },\n        {\n            \"_id\": \"67bd84bb4a54f24d2fc7d83d\",\n            \"employeeCode\": \"110202199755\"\n        },\n        {\n            \"_id\": \"67bd84bb4a54f24d2fc7d83f\",\n            \"employeeCode\": \"110202199738\"\n        },\n        {\n            \"_id\": \"67bd98cb778cc8bb6246103c\",\n            \"employeeCode\": \"110155420224\"\n        },\n        {\n            \"_id\": \"67bd98cb778cc8bb6246103e\",\n            \"employeeCode\": \"791\"\n        },\n        {\n            \"_id\": \"67bd98cc778cc8bb62461040\",\n            \"employeeCode\": \"110071410846\"\n        },\n        {\n            \"_id\": \"67bd98cc778cc8bb62461042\",\n            \"employeeCode\": \"589\"\n        },\n        {\n            \"_id\": \"67bd98cc778cc8bb62461044\",\n            \"employeeCode\": \"110105420221\"\n        },\n        {\n            \"_id\": \"67bd98cc778cc8bb62461046\",\n            \"employeeCode\": \"553\"\n        },\n        {\n            \"_id\": \"67bd98cd778cc8bb62461048\",\n            \"employeeCode\": \"110123897497\"\n        },\n        {\n            \"_id\": \"67bd98cd778cc8bb6246104a\",\n            \"employeeCode\": \"821\"\n        },\n        {\n            \"_id\": \"67bd98cd778cc8bb6246104c\",\n            \"employeeCode\": \"cf-8555\"\n        },\n        {\n            \"_id\": \"67bd98cd778cc8bb6246104e\",\n            \"employeeCode\": \"1019\"\n        },\n        {\n            \"_id\": \"67bd98ce778cc8bb62461050\",\n            \"employeeCode\": \"110091412014\"\n        },\n        {\n            \"_id\": \"67bd98ce778cc8bb62461052\",\n            \"employeeCode\": \"973\"\n        },\n        {\n            \"_id\": \"67bd98ce778cc8bb62461054\",\n            \"employeeCode\": \"644\"\n        },\n        {\n            \"_id\": \"67bd98ce778cc8bb62461056\",\n            \"employeeCode\": \"657\"\n        },\n        {\n            \"_id\": \"67bd98cf778cc8bb62461058\",\n            \"employeeCode\": \"110051438194\"\n        },\n        {\n            \"_id\": \"67bd98cf778cc8bb6246105a\",\n            \"employeeCode\": \"110198608849\"\n        },\n        {\n            \"_id\": \"67bd98cf778cc8bb6246105c\",\n            \"employeeCode\": \"110143897496\"\n        },\n        {\n            \"_id\": \"67bd98cf778cc8bb6246105e\",\n            \"employeeCode\": \"111001412005\"\n        },\n        {\n            \"_id\": \"67bd98d0778cc8bb62461060\",\n            \"employeeCode\": \"cf-9097\"\n        },\n        {\n            \"_id\": \"67bd98d0778cc8bb62461062\",\n            \"employeeCode\": \"cf-5723\"\n        },\n        {\n            \"_id\": \"67bd98d0778cc8bb62461064\",\n            \"employeeCode\": \"110091438192\"\n        },\n        {\n            \"_id\": \"67bd98d0778cc8bb62461066\",\n            \"employeeCode\": \"970\"\n        },\n        {\n            \"_id\": \"67bd98d1778cc8bb62461068\",\n            \"employeeCode\": \"110102123273\"\n        },\n        {\n            \"_id\": \"67bd98d1778cc8bb6246106a\",\n            \"employeeCode\": \"110163897495\"\n        },\n        {\n            \"_id\": \"67bd98d1778cc8bb6246106c\",\n            \"employeeCode\": \"517\"\n        },\n        {\n            \"_id\": \"67bd98d1778cc8bb6246106e\",\n            \"employeeCode\": \"110071412046\"\n        },\n        {\n            \"_id\": \"67bd98d2778cc8bb62461070\",\n            \"employeeCode\": \"110195420222\"\n        },\n        {\n            \"_id\": \"67bd98d2778cc8bb62461072\",\n            \"employeeCode\": \"1026\"\n        },\n        {\n            \"_id\": \"67bd98d2778cc8bb62461074\",\n            \"employeeCode\": \"976\"\n        },\n        {\n            \"_id\": \"67eb95ab51701b49bca1a8e1\",\n            \"employeeCode\": \"IIITB24049\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "mailToEmp",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"  pm.test(\"Response has the required fields - employeeCode, name, and branch\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('employeeCode');",
							"    pm.expect(responseData).to.have.property('name');",
							"    pm.expect(responseData).to.have.property('branch');",
							"  });",
							"",
							"",
							"pm.test(\"EmployeeCode is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.employeeCode).to.be.a('string').and.to.have.lengthOf.at.least(1, \"EmployeeCode should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Branch is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.branch).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Branch should be a non-empty string\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\"email\":\"deepaktomar@manit.ac.in\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/hod/emailToEmp",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"hod",
						"emailToEmp"
					]
				}
			},
			"response": [
				{
					"name": "mailToEmp",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n\"email\":\"deepaktomar@manit.ac.in\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/hod/emailToEmp",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"hod",
								"emailToEmp"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "66"
						},
						{
							"key": "ETag",
							"value": "W/\"42-t0wXaRYcG37zXHUgU+80Xst7ZNs\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Apr 2025 12:10:33 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"employeeCode\": \"1067\",\n    \"name\": \"Deepak Singh Tomar\",\n    \"branch\": \"CSE\"\n}"
				}
			]
		},
		{
			"name": "SOV2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.scholarNumber).to.exist;",
							"    pm.expect(responseData.studentName).to.exist;",
							"    pm.expect(responseData.summary).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"SubCode is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  responseData.summary.forEach(function(item) {",
							"    pm.expect(item.subCode).to.be.a('string').and.to.have.lengthOf.at.least(1, \"SubCode should not be empty\");",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"Total and present are non-negative integers\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.summary).to.be.an('array');",
							"  ",
							"  responseData.summary.forEach((item) => {",
							"    pm.expect(item.total).to.be.a('number').and.to.be.at.least(0);",
							"    pm.expect(item.present).to.be.a('number').and.to.be.at.least(0);",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"scholarNumber\": \"2211201152\",\r\n    \"branch\" : \"CSE\" \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/student/studentOverallReport",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"student",
						"studentOverallReport"
					]
				},
				"description": "Specialized Student Overall Report for the HOD"
			},
			"response": [
				{
					"name": "Student Overall Report",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"scholarNumber\": \"2211201138\",\r\n    \"branch\" : \"CSE\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/student/studentOverallReport",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"student",
								"studentOverallReport"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "692"
						},
						{
							"key": "ETag",
							"value": "W/\"2b4-f1jLn6Y0elEWXT+AkHD3QounrR0\""
						},
						{
							"key": "Date",
							"value": "Wed, 02 Apr 2025 10:20:21 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"subjects\": [\n        {\n            \"subCode\": \"CSE357\",\n            \"subjectName\": \"Advanced Data Structures\",\n            \"subjectId\": \"678dfa8ad5665f6a3eb3fa67\",\n            \"ownerId\": \"678ce4d0cd76735183ab8350\"\n        },\n        {\n            \"subCode\": \"CSE321\",\n            \"subjectName\": \"Machine Learning\",\n            \"subjectId\": \"678ce483cd76735183ab8347\",\n            \"ownerId\": \"678ce4d1cd76735183ab8354\"\n        },\n        {\n            \"subCode\": \"CSE324\",\n            \"subjectName\": \"Machine Learning Lab\",\n            \"subjectId\": \"678ce483cd76735183ab834e\",\n            \"ownerId\": \"678ce4d1cd76735183ab8354\"\n        },\n        {\n            \"subCode\": \"CSE323\",\n            \"subjectName\": \"Network & System Securities (T)\",\n            \"subjectId\": \"678ce483cd76735183ab8349\",\n            \"ownerId\": \"678ce4d1cd76735183ab8356\"\n        },\n        {\n            \"subCode\": \"CSE326\",\n            \"subjectName\": \"Hadoop & CUDA Lab\",\n            \"subjectId\": \"678ce483cd76735183ab834f\",\n            \"ownerId\": \"678ce4d5cd76735183ab837a\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "GetDepartments2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>Department</th>\r",
							"        <th>Branches</th>\r",
							"        <th>Courses</th>\r",
							"    </tr>\r",
							"    \r",
							"    {{#each response.departments}}\r",
							"        <tr>\r",
							"            <td>{{department}}</td>\r",
							"            <td>\r",
							"                <ul>\r",
							"                    {{#each branches}}\r",
							"                        <li>Course: {{course}}, Program: {{program}}, Short Form: {{shortForm}}, Session: {{session}}, Duration: {{duration}}</li>\r",
							"                    {{/each}}\r",
							"                </ul>\r",
							"            </td>\r",
							"            <td>\r",
							"                <ul>\r",
							"                    {{#each courses}}\r",
							"                        <li>Name: {{name}}, Type: {{type}}, Duration: {{duration}}</li>\r",
							"                    {{/each}}\r",
							"                </ul>\r",
							"            </td>\r",
							"        </tr>\r",
							"    {{/each}}\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    return {response: pm.response.json()}\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - status, departments, and branches\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.status).to.exist;",
							"  pm.expect(responseData.departments).to.exist;",
							"  pm.expect(responseData.branches).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Validate the format of the _id field in the departments array\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.departments).to.be.an('array');",
							"    responseData.departments.forEach(function(department) {",
							"        pm.expect(department._id).to.be.a('string');",
							"        pm.expect(department._id).to.match(/^[0-9a-fA-F]{24}$/); // Validate for MongoDB ObjectId format",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Courses array is present and contains expected number of elements\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.departments).to.be.an('array');",
							"    ",
							"    responseData.departments.forEach(department => {",
							"        pm.expect(department.courses).to.exist;",
							"        pm.expect(department.courses).to.be.an('array');",
							"        pm.expect(department.courses).to.have.lengthOf.at.least(0);",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Validate courses array properties\", function () {",
							"    const responseData = pm.response.json();",
							"    const courses = responseData.departments[0].courses;",
							"",
							"    courses.forEach(course => {",
							"        pm.expect(course.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should be a non-empty string\");",
							"        pm.expect(course.type).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Type should be a non-empty string\");",
							"        pm.expect(course.duration).to.be.a('number').and.to.be.at.least(0, \"Duration should be a non-negative integer\");",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/admin/departments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"admin",
						"departments"
					]
				},
				"description": "### This is the API Endpoint made for the ADMIN for the input module . Through this we retrieve the departments related info"
			},
			"response": [
				{
					"name": "Departments",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/admin/departments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"admin",
								"departments"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Security-Policy",
							"value": "default-src 'self';script-src 'self';style-src 'self' 'unsafe-inline' fonts.googleapis.com;img-src 'self' data:;connect-src 'self';font-src 'self' fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';form-action 'self';base-uri 'self';frame-ancestors 'self';script-src-attr 'none'"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Resource-Policy",
							"value": "same-origin"
						},
						{
							"key": "Origin-Agent-Cluster",
							"value": "?1"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000; includeSubDomains"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-DNS-Prefetch-Control",
							"value": "off"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "X-Permitted-Cross-Domain-Policies",
							"value": "none"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "8811"
						},
						{
							"key": "ETag",
							"value": "W/\"226b-wkdaASRH3c9FSS+bU5FbOeb2H10\""
						},
						{
							"key": "Date",
							"value": "Thu, 10 Apr 2025 12:35:44 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"departments\": [\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2d0\",\n            \"department\": \"Architecture & Planning\",\n            \"cn\": \"AP\",\n            \"branches\": [\n                {\n                    \"course\": \"Bachelor of Architecture\",\n                    \"program\": \"B.Arch.\",\n                    \"shortForm\": \"BArch\",\n                    \"session\": [\n                        \"2022-27\"\n                    ],\n                    \"duration\": 5\n                },\n                {\n                    \"course\": \"Bachelor of Planning\",\n                    \"program\": \"B.Plan.\",\n                    \"shortForm\": \"BPlan\",\n                    \"session\": [\n                        \"2022-26\"\n                    ],\n                    \"duration\": 4\n                },\n                {\n                    \"course\": \"Urban Planning\",\n                    \"program\": \"M.Plan.\",\n                    \"shortForm\": \"UPlan\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Real Estate Development\",\n                    \"program\": \"M.Plan.\",\n                    \"shortForm\": \"RED\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"B.Arch.\",\n                    \"type\": \"UG\",\n                    \"duration\": 5\n                },\n                {\n                    \"name\": \"B.Plan.\",\n                    \"type\": \"UG\",\n                    \"duration\": 4\n                },\n                {\n                    \"name\": \"M.Plan.\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2d1\",\n            \"department\": \"Biological Science and Engineering\",\n            \"cn\": \"BSE\",\n            \"branches\": [\n                {\n                    \"course\": \"Bio-Technology\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"BT\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2d2\",\n            \"department\": \"Centre for Artificial Intelligence\",\n            \"cn\": \"AI\",\n            \"branches\": [\n                {\n                    \"course\": \"Artificial Intelligence\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"CSE_AI\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2d3\",\n            \"department\": \"Centre of Excellence in Product Design & Smart Manufacturing\",\n            \"cn\": \"CEPDSM\",\n            \"branches\": [\n                {\n                    \"course\": \"Smart Manufacturing\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"CEPDSM\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2d4\",\n            \"department\": \"Chemical Engineering\",\n            \"cn\": \"CHEM\",\n            \"branches\": [\n                {\n                    \"course\": \"Bachelor of Technology\",\n                    \"program\": \"B.Tech\",\n                    \"shortForm\": \"CHEM\",\n                    \"session\": [\n                        \"2022-26\",\n                        \"2023-27\",\n                        \"2024-28\"\n                    ],\n                    \"duration\": 4\n                },\n                {\n                    \"course\": \"Chemical Engineering\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"CE\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Environmental Engineering\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"EE\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"B.Tech\",\n                    \"type\": \"UG\",\n                    \"duration\": 4\n                },\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2d5\",\n            \"department\": \"Civil Engineering\",\n            \"cn\": \"CVL\",\n            \"branches\": [\n                {\n                    \"course\": \"Civil Engineering\",\n                    \"program\": \"B.Tech\",\n                    \"shortForm\": \"CVL\",\n                    \"session\": [\n                        \"2022-26\",\n                        \"2023-27\",\n                        \"2024-28\"\n                    ],\n                    \"duration\": 4\n                },\n                {\n                    \"course\": \"Geoinformatics & its Applications\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"GIA\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Geotechnical Engineering\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"GTE\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Water Resource Engineering & Management\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"WREM\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Structural Engineering\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"SE\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Transportation Engineering\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"TE\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Infrastructure Engineering And Construction Management\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"IECM\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"B.Tech\",\n                    \"type\": \"UG\",\n                    \"duration\": 4\n                },\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2d6\",\n            \"department\": \"Computer Science & Engineering\",\n            \"cn\": \"CSE\",\n            \"branches\": [\n                {\n                    \"course\": \"Computer Science & Engineering\",\n                    \"program\": \"B.Tech\",\n                    \"shortForm\": \"CSE\",\n                    \"session\": [\n                        \"2022-26\",\n                        \"2023-27\",\n                        \"2024-28\"\n                    ],\n                    \"duration\": 4\n                },\n                {\n                    \"course\": \"Advanced Computing\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"CSE_AC\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Computer Networks\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"CSE_CN\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Information Security\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"CSE_IS\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"B.Tech\",\n                    \"type\": \"UG\",\n                    \"duration\": 4\n                },\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2d7\",\n            \"department\": \"Electrical Engineering\",\n            \"cn\": \"EE\",\n            \"branches\": [\n                {\n                    \"course\": \"Electrical Engineering\",\n                    \"program\": \"B.Tech\",\n                    \"shortForm\": \"EE\",\n                    \"session\": [\n                        \"2022-26\",\n                        \"2023-27\",\n                        \"2024-28\"\n                    ],\n                    \"duration\": 4\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"B.Tech\",\n                    \"type\": \"UG\",\n                    \"duration\": 4\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2d8\",\n            \"department\": \"Electronics & Communication Engineering\",\n            \"cn\": \"ECE\",\n            \"branches\": [\n                {\n                    \"course\": \"Electronics & Communication Engineering\",\n                    \"program\": \"B.Tech\",\n                    \"shortForm\": \"ECE\",\n                    \"session\": [\n                        \"2022-26\",\n                        \"2023-27\",\n                        \"2024-28\"\n                    ],\n                    \"duration\": 4\n                },\n                {\n                    \"course\": \"Communication Systems\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"ECE_CS\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"VLSI design & Embedded System\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"ECE_VED\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"B.Tech\",\n                    \"type\": \"UG\",\n                    \"duration\": 4\n                },\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2d9\",\n            \"department\": \"Energy Centre\",\n            \"cn\": \"EC\",\n            \"branches\": [\n                {\n                    \"course\": \"Renewable Energy\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"RE\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2da\",\n            \"department\": \"Energy and Electrical Vehicle Engineering\",\n            \"cn\": \"EEVE\",\n            \"branches\": [\n                {\n                    \"course\": \"Energy and Electrical Vehicle Engineering\",\n                    \"program\": \"B.Tech\",\n                    \"shortForm\": \"EEVE\",\n                    \"session\": [\n                        \"2022-26\",\n                        \"2023-27\",\n                        \"2024-28\"\n                    ],\n                    \"duration\": 4\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"B.Tech\",\n                    \"type\": \"UG\",\n                    \"duration\": 4\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2db\",\n            \"department\": \"Energy Economics and Management\",\n            \"cn\": \"EEM\",\n            \"branches\": [\n                {\n                    \"course\": \"M.Sc in Energy\",\n                    \"program\": \"M.Sc.\",\n                    \"shortForm\": \"MSC_ENG\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"M.Sc.\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2dc\",\n            \"department\": \"Management Studies\",\n            \"cn\": \"MGMT\",\n            \"branches\": [\n                {\n                    \"course\": \"Master of Business Administration\",\n                    \"program\": \"MBA\",\n                    \"shortForm\": \"MBA\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"MBA\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2dd\",\n            \"department\": \"Materials & Metallurgical Engineering\",\n            \"cn\": \"MME\",\n            \"branches\": [\n                {\n                    \"course\": \"Materials & Metallurgical Engineering\",\n                    \"program\": \"B.Tech\",\n                    \"shortForm\": \"MME\",\n                    \"session\": [\n                        \"2022-26\",\n                        \"2023-27\",\n                        \"2024-28\"\n                    ],\n                    \"duration\": 4\n                },\n                {\n                    \"course\": \"Material Science & Technology\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"MST\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"B.Tech\",\n                    \"type\": \"UG\",\n                    \"duration\": 4\n                },\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2de\",\n            \"department\": \"Mathematics and Data Science\",\n            \"cn\": \"MDS\",\n            \"branches\": [\n                {\n                    \"course\": \"Mathematics and Data Science\",\n                    \"program\": \"B.Tech-M.Tech\",\n                    \"shortForm\": \"MDS\",\n                    \"session\": [],\n                    \"duration\": 5\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"B.Tech-M.Tech\",\n                    \"type\": \"DD\",\n                    \"duration\": 5\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2df\",\n            \"department\": \"Mathematics, Bioinformatics & Computer Applications\",\n            \"cn\": \"MBC\",\n            \"branches\": [\n                {\n                    \"course\": \"Bioinformatics\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"BI\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Agile Software Engineering\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"ASE\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Master of Computer Applications\",\n                    \"program\": \"MCA\",\n                    \"shortForm\": \"MCA\",\n                    \"session\": [],\n                    \"duration\": 3\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                },\n                {\n                    \"name\": \"MCA\",\n                    \"type\": \"PG\",\n                    \"duration\": 3\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2e0\",\n            \"department\": \"Mechanical Engineering\",\n            \"cn\": \"ME\",\n            \"branches\": [\n                {\n                    \"course\": \"Mechanical Engineering\",\n                    \"program\": \"B.Tech\",\n                    \"shortForm\": \"ME\",\n                    \"session\": [\n                        \"2022-26\",\n                        \"2023-27\",\n                        \"2024-28\"\n                    ],\n                    \"duration\": 4\n                },\n                {\n                    \"course\": \"Automation and Robotics\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"AR\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Machine Design\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"MD\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Industrial Engineering and Management\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"IEM\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Thermal Engineering\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"TH\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"B.Tech\",\n                    \"type\": \"UG\",\n                    \"duration\": 4\n                },\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2e1\",\n            \"department\": \"Physics\",\n            \"cn\": \"PHY\",\n            \"branches\": [\n                {\n                    \"course\": \"Nano Technology\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"NT\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"M.Sc in Physics\",\n                    \"program\": \"M.Sc.\",\n                    \"shortForm\": \"MSP\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                },\n                {\n                    \"name\": \"M.Sc.\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2e2\",\n            \"department\": \"Chemistry\",\n            \"cn\": \"CHEM\",\n            \"branches\": [\n                {\n                    \"course\": \"M.Sc in Chemistry\",\n                    \"program\": \"M.Sc.\",\n                    \"shortForm\": \"CHEM_MSC\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"M.Sc.\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f53873c441dc85ba4ed2e3\",\n            \"department\": \"Engineering and Computational Mechanics\",\n            \"cn\": \"ECM\",\n            \"branches\": [\n                {\n                    \"course\": \"Engineering and Computational Mechanics\",\n                    \"program\": \"B.Tech-M.Tech\",\n                    \"shortForm\": \"DD-ECM\",\n                    \"session\": [],\n                    \"duration\": 5\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"B.Tech-M.Tech\",\n                    \"type\": \"DD\",\n                    \"duration\": 5\n                }\n            ]\n        },\n        {\n            \"_id\": \"67f7708efbccc1111e0af35e\",\n            \"department\": \"Electrical Engineering Electronics & Communication Engineering\",\n            \"cn\": \"EEECE\",\n            \"branches\": [\n                {\n                    \"course\": \"Power Electronics & Drives\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"PED\",\n                    \"session\": [],\n                    \"duration\": 2\n                },\n                {\n                    \"course\": \"Integrated Power System\",\n                    \"program\": \"M.Tech\",\n                    \"shortForm\": \"IPS\",\n                    \"session\": [],\n                    \"duration\": 2\n                }\n            ],\n            \"courses\": [\n                {\n                    \"name\": \"M.Tech\",\n                    \"type\": \"PG\",\n                    \"duration\": 2\n                }\n            ]\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "GetSpecificDept",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Validate the department object\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.department).to.exist.and.to.be.an('object');",
							"    pm.expect(responseData.department._id).to.exist.and.to.be.a('string');",
							"    pm.expect(responseData.department.department).to.exist.and.to.be.a('string');",
							"    pm.expect(responseData.department.cn).to.exist.and.to.be.a('string');",
							"    pm.expect(responseData.department.branches).to.exist.and.to.be.an('array');",
							"    pm.expect(responseData.department.branches).to.not.be.empty;",
							"    responseData.department.branches.forEach(function(branch) {",
							"        pm.expect(branch).to.be.an('object');",
							"        pm.expect(branch.course).to.exist.and.to.be.a('string');",
							"        pm.expect(branch.program).to.exist.and.to.be.a('string');",
							"        pm.expect(branch.shortForm).to.exist.and.to.be.a('string');",
							"        pm.expect(branch.session).to.exist.and.to.be.an('array');",
							"        pm.expect(branch.duration).to.exist.and.to.be.a('number');",
							"    });",
							"    pm.expect(responseData.department.courses).to.exist.and.to.be.an('array');",
							"    pm.expect(responseData.department.courses).to.not.be.empty;",
							"    responseData.department.courses.forEach(function(course) {",
							"        pm.expect(course).to.be.an('object');",
							"        pm.expect(course.name).to.exist.and.to.be.a('string');",
							"        pm.expect(course.type).to.exist.and.to.be.a('string');",
							"        pm.expect(course.duration).to.exist.and.to.be.a('number');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Branches array is present and contains expected number of elements\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.department.branches).to.exist.and.to.be.an('array');",
							"    pm.expect(responseData.department.branches).to.have.lengthOf(1);",
							"});",
							"",
							"",
							"pm.test(\"Validate that course and program in branches are non-empty strings\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.department.branches).to.be.an('array');",
							"    ",
							"    responseData.department.branches.forEach(branch => {",
							"        pm.expect(branch.course).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Course should be a non-empty string\");",
							"        pm.expect(branch.program).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Program should be a non-empty string\");",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/admin/departments/67f53873c441dc85ba4ed2d6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"admin",
						"departments",
						"67f53873c441dc85ba4ed2d6"
					]
				},
				"description": "Returns the info of the particular Department"
			},
			"response": [
				{
					"name": "GetSpecificDept",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/admin/departments/67f53873c441dc85ba4ed2d6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"admin",
								"departments",
								"67f53873c441dc85ba4ed2d6"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Security-Policy",
							"value": "default-src 'self';script-src 'self';style-src 'self' 'unsafe-inline' fonts.googleapis.com;img-src 'self' data:;connect-src 'self';font-src 'self' fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';form-action 'self';base-uri 'self';frame-ancestors 'self';script-src-attr 'none'"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Resource-Policy",
							"value": "same-origin"
						},
						{
							"key": "Origin-Agent-Cluster",
							"value": "?1"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000; includeSubDomains"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-DNS-Prefetch-Control",
							"value": "off"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "X-Permitted-Cross-Domain-Policies",
							"value": "none"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "667"
						},
						{
							"key": "ETag",
							"value": "W/\"29b-TG8nNLPAos5TUIddVoVi+zSQYYQ\""
						},
						{
							"key": "Date",
							"value": "Thu, 10 Apr 2025 12:36:57 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"department\": {\n        \"_id\": \"67f53873c441dc85ba4ed2d6\",\n        \"department\": \"Computer Science & Engineering\",\n        \"cn\": \"CSE\",\n        \"branches\": [\n            {\n                \"course\": \"Computer Science & Engineering\",\n                \"program\": \"B.Tech\",\n                \"shortForm\": \"CSE\",\n                \"session\": [\n                    \"2022-26\",\n                    \"2023-27\",\n                    \"2024-28\"\n                ],\n                \"duration\": 4\n            },\n            {\n                \"course\": \"Advanced Computing\",\n                \"program\": \"M.Tech\",\n                \"shortForm\": \"CSE_AC\",\n                \"session\": [],\n                \"duration\": 2\n            },\n            {\n                \"course\": \"Computer Networks\",\n                \"program\": \"M.Tech\",\n                \"shortForm\": \"CSE_CN\",\n                \"session\": [],\n                \"duration\": 2\n            },\n            {\n                \"course\": \"Information Security\",\n                \"program\": \"M.Tech\",\n                \"shortForm\": \"CSE_IS\",\n                \"session\": [],\n                \"duration\": 2\n            }\n        ],\n        \"courses\": [\n            {\n                \"name\": \"B.Tech\",\n                \"type\": \"UG\",\n                \"duration\": 4\n            },\n            {\n                \"name\": \"M.Tech\",\n                \"type\": \"PG\",\n                \"duration\": 2\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "AddDept",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.equal(400);",
							"});",
							"",
							"",
							"pm.test(\"Response status, message, and data fields exist\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.status).to.exist;",
							"    pm.expect(responseData.message).to.exist;",
							"    pm.expect(responseData.data).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Message is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Data is an empty object\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.data).to.be.an('object').that.is.empty;",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"department\": \"Test\",\r\n  \"cn\": \"tst\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/admin/departments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"admin",
						"departments"
					]
				},
				"description": "This is for adding a particular department into the departments collection"
			},
			"response": [
				{
					"name": "AddDept",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"department\": \"Test\",\r\n  \"cn\": \"tst\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/admin/departments",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"admin",
								"departments"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Security-Policy",
							"value": "default-src 'self';script-src 'self';style-src 'self' 'unsafe-inline' fonts.googleapis.com;img-src 'self' data:;connect-src 'self';font-src 'self' fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';form-action 'self';base-uri 'self';frame-ancestors 'self';script-src-attr 'none'"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Resource-Policy",
							"value": "same-origin"
						},
						{
							"key": "Origin-Agent-Cluster",
							"value": "?1"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000; includeSubDomains"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-DNS-Prefetch-Control",
							"value": "off"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "X-Permitted-Cross-Domain-Policies",
							"value": "none"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "104"
						},
						{
							"key": "ETag",
							"value": "W/\"68-37NFZl0bzuEIwvaOqvm12ZvUKeE\""
						},
						{
							"key": "Date",
							"value": "Thu, 10 Apr 2025 12:40:14 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"message\": \"Department added successfully\",\n    \"departmentId\": \"67f7bc2e88b872c6a567bdf8\"\n}"
				}
			]
		},
		{
			"name": "Add Course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.equal(400);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - status, message, and data\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('status');",
							"    pm.expect(responseData).to.have.property('message');",
							"    pm.expect(responseData).to.have.property('data');",
							"});",
							"",
							"",
							"pm.test(\"Status is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.status).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Status should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Message is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Data should be an empty object\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData.data).to.be.an('object').that.is.empty;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"departmentId\": \"67f7d5418f8b222e4e24d497\",\r\n  \"branches\": [\r\n    {\r\n      \"course\": \"TestCourse\",\r\n      \"program\": \"B.Tech\",\r\n      \"shortForm\": \"TstC\",\r\n      \"duration\": 4\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/admin/courses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"admin",
						"courses"
					]
				},
				"description": "This for adding a specific course in a particular department"
			},
			"response": [
				{
					"name": "Add Course",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"departmentId\": \"67f7bc2e88b872c6a567bdf8\",\r\n  \"branches\": [\r\n    {\r\n      \"course\": \"TestCourse\",\r\n      \"program\": \"B.Tech\",\r\n      \"shortForm\": \"TstC\",\r\n      \"duration\": 4\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/admin/courses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"admin",
								"courses"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Security-Policy",
							"value": "default-src 'self';script-src 'self';style-src 'self' 'unsafe-inline' fonts.googleapis.com;img-src 'self' data:;connect-src 'self';font-src 'self' fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';form-action 'self';base-uri 'self';frame-ancestors 'self';script-src-attr 'none'"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Resource-Policy",
							"value": "same-origin"
						},
						{
							"key": "Origin-Agent-Cluster",
							"value": "?1"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000; includeSubDomains"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-DNS-Prefetch-Control",
							"value": "off"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "X-Permitted-Cross-Domain-Policies",
							"value": "none"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "72"
						},
						{
							"key": "ETag",
							"value": "W/\"48-oOVf+XAu9am9lPm1aeFflCCOEv4\""
						},
						{
							"key": "Date",
							"value": "Thu, 10 Apr 2025 12:45:14 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"message\": \"Branches and courses added successfully\"\n}"
				}
			]
		},
		{
			"name": "Add Session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 400\", function () {",
							"  pm.expect(pm.response.code).to.equal(400);",
							"});",
							"",
							"",
							"pm.test(\"Status field should exist and be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.status).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Status should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Message field in the response should exist and be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.message).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Data object is present in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.data).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Ensure the Content-Type header is set to application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"departmentId\": \"67f7bc2e88b872c6a567bdf8\",\r\n  \"branchShortForm\": \"C\",\r\n  \"session\": \"2023-27\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/admin/sessions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"admin",
						"sessions"
					]
				},
				"description": "#### This adds a session to a particular course"
			},
			"response": [
				{
					"name": "AddSession",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"departmentId\": \"67f7bc2e88b872c6a567bdf8\",\r\n  \"branchShortForm\": \"C\",\r\n  \"session\": \"2023-27\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/admin/sessions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"admin",
								"sessions"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Security-Policy",
							"value": "default-src 'self';script-src 'self';style-src 'self' 'unsafe-inline' fonts.googleapis.com;img-src 'self' data:;connect-src 'self';font-src 'self' fonts.gstatic.com;object-src 'none';media-src 'self';frame-src 'none';form-action 'self';base-uri 'self';frame-ancestors 'self';script-src-attr 'none'"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Resource-Policy",
							"value": "same-origin"
						},
						{
							"key": "Origin-Agent-Cluster",
							"value": "?1"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=31536000; includeSubDomains"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-DNS-Prefetch-Control",
							"value": "off"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "X-Permitted-Cross-Domain-Policies",
							"value": "none"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "http://localhost:5173"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "59"
						},
						{
							"key": "ETag",
							"value": "W/\"3b-2zmPmoVuKib4aJ4cenEIES629Nc\""
						},
						{
							"key": "Date",
							"value": "Thu, 10 Apr 2025 12:53:50 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"message\": \"Session added successfully\"\n}"
				}
			]
		},
		{
			"name": "SemConfig",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"semesterType\": \"odd\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/admin/semester",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"admin",
						"semester"
					]
				},
				"description": "This is reponsible for the configuring the type of semester . It can be either even or odd depending on the scenario ."
			},
			"response": []
		},
		{
			"name": "SemStatus",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/admin/semester",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"admin",
						"semester"
					]
				},
				"description": "This returns whether the present semester in overall manit is even or odd ."
			},
			"response": []
		},
		{
			"name": "CourseType",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"departmentId\": \"67f7d5418f8b222e4e24d497\",\r\n  \"courseName\": \"B.Des.\",\r\n  \"courseType\": \"UG\",\r\n  \"duration\": 4\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/admin/courseType",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"admin",
						"courseType"
					]
				},
				"description": "Adds a particular course in a particular department"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "HOD",
			"value": "http://localhost:3000/api/hod",
			"type": "string"
		},
		{
			"key": "Director",
			"value": "http://localhost:3000/api/director",
			"type": "string"
		},
		{
			"key": "Faculty",
			"value": "http://localhost:3000/api/faculty",
			"type": "string"
		},
		{
			"key": "student",
			"value": "http://localhost:3000/api/student",
			"type": "string"
		}
	]
}